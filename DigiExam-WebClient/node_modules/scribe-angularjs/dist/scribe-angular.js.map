{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "node_modules/immutable/dist/immutable.js",
    "node_modules/lodash-amd/modern/array/flatten.js",
    "node_modules/lodash-amd/modern/array/last.js",
    "node_modules/lodash-amd/modern/array/pull.js",
    "node_modules/lodash-amd/modern/collection/contains.js",
    "node_modules/lodash-amd/modern/collection/includes.js",
    "node_modules/lodash-amd/modern/internal/arrayCopy.js",
    "node_modules/lodash-amd/modern/internal/arrayEach.js",
    "node_modules/lodash-amd/modern/internal/assignDefaults.js",
    "node_modules/lodash-amd/modern/internal/baseAssign.js",
    "node_modules/lodash-amd/modern/internal/baseClone.js",
    "node_modules/lodash-amd/modern/internal/baseCopy.js",
    "node_modules/lodash-amd/modern/internal/baseFlatten.js",
    "node_modules/lodash-amd/modern/internal/baseFor.js",
    "node_modules/lodash-amd/modern/internal/baseForIn.js",
    "node_modules/lodash-amd/modern/internal/baseForOwn.js",
    "node_modules/lodash-amd/modern/internal/baseIndexOf.js",
    "node_modules/lodash-amd/modern/internal/baseMerge.js",
    "node_modules/lodash-amd/modern/internal/baseMergeDeep.js",
    "node_modules/lodash-amd/modern/internal/baseToString.js",
    "node_modules/lodash-amd/modern/internal/baseValues.js",
    "node_modules/lodash-amd/modern/internal/bindCallback.js",
    "node_modules/lodash-amd/modern/internal/bufferClone.js",
    "node_modules/lodash-amd/modern/internal/createAssigner.js",
    "node_modules/lodash-amd/modern/internal/escapeHtmlChar.js",
    "node_modules/lodash-amd/modern/internal/indexOfNaN.js",
    "node_modules/lodash-amd/modern/internal/initCloneArray.js",
    "node_modules/lodash-amd/modern/internal/initCloneByTag.js",
    "node_modules/lodash-amd/modern/internal/initCloneObject.js",
    "node_modules/lodash-amd/modern/internal/isIndex.js",
    "node_modules/lodash-amd/modern/internal/isIterateeCall.js",
    "node_modules/lodash-amd/modern/internal/isLength.js",
    "node_modules/lodash-amd/modern/internal/isObjectLike.js",
    "node_modules/lodash-amd/modern/internal/root.js",
    "node_modules/lodash-amd/modern/internal/shimIsPlainObject.js",
    "node_modules/lodash-amd/modern/internal/shimKeys.js",
    "node_modules/lodash-amd/modern/internal/toObject.js",
    "node_modules/lodash-amd/modern/lang/cloneDeep.js",
    "node_modules/lodash-amd/modern/lang/isArguments.js",
    "node_modules/lodash-amd/modern/lang/isArray.js",
    "node_modules/lodash-amd/modern/lang/isNative.js",
    "node_modules/lodash-amd/modern/lang/isObject.js",
    "node_modules/lodash-amd/modern/lang/isPlainObject.js",
    "node_modules/lodash-amd/modern/lang/isString.js",
    "node_modules/lodash-amd/modern/lang/isTypedArray.js",
    "node_modules/lodash-amd/modern/lang/toArray.js",
    "node_modules/lodash-amd/modern/lang/toPlainObject.js",
    "node_modules/lodash-amd/modern/object/assign.js",
    "node_modules/lodash-amd/modern/object/defaults.js",
    "node_modules/lodash-amd/modern/object/keys.js",
    "node_modules/lodash-amd/modern/object/keysIn.js",
    "node_modules/lodash-amd/modern/object/merge.js",
    "node_modules/lodash-amd/modern/object/values.js",
    "node_modules/lodash-amd/modern/string/escape.js",
    "node_modules/lodash-amd/modern/string/escapeRegExp.js",
    "node_modules/lodash-amd/modern/support.js",
    "node_modules/lodash-amd/modern/utility/constant.js",
    "node_modules/lodash-amd/modern/utility/identity.js",
    "node_modules/scribe-editor/src/api.js",
    "node_modules/scribe-editor/src/api/children.js",
    "node_modules/scribe-editor/src/api/command-patch.js",
    "node_modules/scribe-editor/src/api/command.js",
    "node_modules/scribe-editor/src/api/node.js",
    "node_modules/scribe-editor/src/api/selection.js",
    "node_modules/scribe-editor/src/api/simple-command.js",
    "node_modules/scribe-editor/src/config.js",
    "node_modules/scribe-editor/src/dom-observer.js",
    "node_modules/scribe-editor/src/element.js",
    "node_modules/scribe-editor/src/event-emitter.js",
    "node_modules/scribe-editor/src/node.js",
    "node_modules/scribe-editor/src/plugins/core/commands.js",
    "node_modules/scribe-editor/src/plugins/core/commands/indent.js",
    "node_modules/scribe-editor/src/plugins/core/commands/insert-list.js",
    "node_modules/scribe-editor/src/plugins/core/commands/outdent.js",
    "node_modules/scribe-editor/src/plugins/core/commands/redo.js",
    "node_modules/scribe-editor/src/plugins/core/commands/subscript.js",
    "node_modules/scribe-editor/src/plugins/core/commands/superscript.js",
    "node_modules/scribe-editor/src/plugins/core/commands/undo.js",
    "node_modules/scribe-editor/src/plugins/core/events.js",
    "node_modules/scribe-editor/src/plugins/core/formatters.js",
    "node_modules/scribe-editor/src/plugins/core/formatters/html/enforce-p-elements.js",
    "node_modules/scribe-editor/src/plugins/core/formatters/html/ensure-selectable-containers.js",
    "node_modules/scribe-editor/src/plugins/core/formatters/html/replace-nbsp-chars.js",
    "node_modules/scribe-editor/src/plugins/core/formatters/plain-text/escape-html-characters.js",
    "node_modules/scribe-editor/src/plugins/core/inline-elements-mode.js",
    "node_modules/scribe-editor/src/plugins/core/patches.js",
    "node_modules/scribe-editor/src/plugins/core/patches/commands/bold.js",
    "node_modules/scribe-editor/src/plugins/core/patches/commands/create-link.js",
    "node_modules/scribe-editor/src/plugins/core/patches/commands/indent.js",
    "node_modules/scribe-editor/src/plugins/core/patches/commands/insert-html.js",
    "node_modules/scribe-editor/src/plugins/core/patches/commands/insert-list.js",
    "node_modules/scribe-editor/src/plugins/core/patches/commands/outdent.js",
    "node_modules/scribe-editor/src/plugins/core/patches/events.js",
    "node_modules/scribe-editor/src/plugins/core/plugins.js",
    "node_modules/scribe-editor/src/plugins/core/set-root-p-element.js",
    "node_modules/scribe-editor/src/scribe.js",
    "node_modules/scribe-editor/src/transaction-manager.js",
    "node_modules/scribe-editor/src/undo-manager.js",
    "node_modules/scribe-plugin-blockquote-command/src/scribe-plugin-blockquote-command.js",
    "node_modules/scribe-plugin-formatter-html-ensure-semantic-elements/src/scribe-plugin-formatter-html-ensure-semantic-elements.js",
    "node_modules/scribe-plugin-heading-command/src/scribe-plugin-heading-command.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/functions/bind.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/functions/createCallback.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/internals/arrayPool.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/internals/baseBind.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/internals/baseCreate.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/internals/baseCreateCallback.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/internals/baseCreateWrapper.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/internals/baseIsEqual.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/internals/createWrapper.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/internals/getArray.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/internals/isNative.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/internals/maxPoolSize.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/internals/objectTypes.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/internals/releaseArray.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/internals/setBindData.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/internals/shimKeys.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/internals/slice.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/objects/findKey.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/objects/forIn.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/objects/forOwn.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/objects/isFunction.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/objects/isObject.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/objects/keys.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/support.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/utilities/noop.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/node_modules/lodash-amd/modern/utilities/property.js",
    "node_modules/scribe-plugin-keyboard-shortcuts/src/scribe-plugin-keyboard-shortcuts.js",
    "node_modules/scribe-plugin-sanitizer/node_modules/html-janitor/src/html-janitor.js",
    "node_modules/scribe-plugin-sanitizer/src/scribe-plugin-sanitizer.js",
    "src/scribe-angular.js"
  ],
  "names": [],
  "mappingsxvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjpnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "/**\n *  Copyright (c) 2014-2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.Immutable = factory()\n}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    return index >= 0 ? (+index) : ensureSize(iter) + (+index);\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n      (end === undefined || (size !== undefined && end >= size));\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ?\n      defaultIndex :\n      index < 0 ?\n        Math.max(0, size + index) :\n        size === undefined ?\n          index :\n          Math.min(size, index);\n  }\n\n  function Iterable(value) {\n      return isIterable(value) ? value : Seq(value);\n    }\n\n\n  createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n      return isKeyed(value) ? value : KeyedSeq(value);\n    }\n\n\n  createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n      return isIndexed(value) ? value : IndexedSeq(value);\n    }\n\n\n  createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n\n\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n\n  function src_Iterator__Iterator(next) {\n      this.next = next;\n    }\n\n    src_Iterator__Iterator.prototype.toString = function() {\n      return '[Iterator]';\n    };\n\n\n  src_Iterator__Iterator.KEYS = ITERATE_KEYS;\n  src_Iterator__Iterator.VALUES = ITERATE_VALUES;\n  src_Iterator__Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  src_Iterator__Iterator.prototype.inspect =\n  src_Iterator__Iterator.prototype.toSource = function () { return this.toString(); }\n  src_Iterator__Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n      value: value, done: false\n    });\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (\n      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]\n    );\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n    function Seq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n\n    Seq.of = function(/*...values*/) {\n      return Seq(arguments);\n    };\n\n    Seq.prototype.toSeq = function() {\n      return this;\n    };\n\n    Seq.prototype.toString = function() {\n      return this.__toString('Seq {', '}');\n    };\n\n    Seq.prototype.cacheResult = function() {\n      if (!this._cache && this.__iterateUncached) {\n        this._cache = this.entrySeq().toArray();\n        this.size = this._cache.length;\n      }\n      return this;\n    };\n\n    // abstract __iterateUncached(fn, reverse)\n\n    Seq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, true);\n    };\n\n    // abstract __iteratorUncached(type, reverse)\n\n    Seq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, true);\n    };\n\n\n\n  createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n      return value === null || value === undefined ?\n        emptySequence().toKeyedSeq() :\n        isIterable(value) ?\n          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n          keyedSeqFromValue(value);\n    }\n\n    KeyedSeq.prototype.toKeyedSeq = function() {\n      return this;\n    };\n\n\n\n  createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n\n    IndexedSeq.of = function(/*...values*/) {\n      return IndexedSeq(arguments);\n    };\n\n    IndexedSeq.prototype.toIndexedSeq = function() {\n      return this;\n    };\n\n    IndexedSeq.prototype.toString = function() {\n      return this.__toString('Seq [', ']');\n    };\n\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, false);\n    };\n\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, false);\n    };\n\n\n\n  createClass(SetSeq, Seq);\n    function SetSeq(value) {\n      return (\n        value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value\n      ).toSetSeq();\n    }\n\n    SetSeq.of = function(/*...values*/) {\n      return SetSeq(arguments);\n    };\n\n    SetSeq.prototype.toSetSeq = function() {\n      return this;\n    };\n\n\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n\n\n  // #pragma Root Sequences\n\n  createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n      this._array = array;\n      this.size = array.length;\n    }\n\n    ArraySeq.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      var ii = 0;\n      return new src_Iterator__Iterator(function() \n        {return ii > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n      );\n    };\n\n\n\n  createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n      var keys = Object.keys(object);\n      this._object = object;\n      this._keys = keys;\n      this.size = keys.length;\n    }\n\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n      if (notSetValue !== undefined && !this.has(key)) {\n        return notSetValue;\n      }\n      return this._object[key];\n    };\n\n    ObjectSeq.prototype.has = function(key) {\n      return this._object.hasOwnProperty(key);\n    };\n\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        if (fn(object[key], key, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      var ii = 0;\n      return new src_Iterator__Iterator(function()  {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, key, object[key]);\n      });\n    };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n      this._iterable = iterable;\n      this.size = iterable.length || iterable.size;\n    }\n\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      var iterations = 0;\n      if (isIterator(iterator)) {\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (fn(step.value, iterations++, this) === false) {\n            break;\n          }\n        }\n      }\n      return iterations;\n    };\n\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      if (!isIterator(iterator)) {\n        return new src_Iterator__Iterator(iteratorDone);\n      }\n      var iterations = 0;\n      return new src_Iterator__Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step : iteratorValue(type, iterations++, step.value);\n      });\n    };\n\n\n\n  createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n      this._iterator = iterator;\n      this._iteratorCache = [];\n    }\n\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      while (iterations < cache.length) {\n        if (fn(cache[iterations], iterations++, this) === false) {\n          return iterations;\n        }\n      }\n      var step;\n      while (!(step = iterator.next()).done) {\n        var val = step.value;\n        cache[iterations] = val;\n        if (fn(val, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      return new src_Iterator__Iterator(function()  {\n        if (iterations >= cache.length) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          cache[iterations] = step.value;\n        }\n        return iteratorValue(type, iterations, cache[iterations++]);\n      });\n    };\n\n\n\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq =\n      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n      typeof value === 'object' ? new ObjectSeq(value) :\n      undefined;\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of [k, v] entries, '+\n        'or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) ||\n      (typeof value === 'object' && new ObjectSeq(value));\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values, or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return (\n      isArrayLike(value) ? new ArraySeq(value) :\n      isIterator(value) ? new IteratorSeq(value) :\n      hasIterator(value) ? new IterableSeq(value) :\n      undefined\n    );\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new src_Iterator__Iterator(function()  {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  createClass(Collection, Iterable);\n    function Collection() {\n      throw TypeError('Abstract');\n    }\n\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' &&\n        typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n    }\n    return typeof valueA.equals === 'function' &&\n      typeof valueB.equals === 'function' ?\n        valueA.equals(valueB) :\n        valueA === valueB || (valueA !== valueA && valueB !== valueB);\n  }\n\n  function fromJS(json, converter) {\n    return converter ?\n      fromJSWith(converter, json, '', {'': json}) :\n      fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  var src_Math__imul =\n    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n    Math.imul :\n    function src_Math__imul(a, b) {\n      a = a | 0; // int\n      b = b | 0; // int\n      var c = a & 0xffff;\n      var d = b & 0xffff;\n      // Shift by 0 fixes the sign on the high part.\n      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n    };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    return hashJSObj(o);\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash = weakMap && weakMap.get(obj);\n    if (hash) return hash;\n\n    hash = obj[UID_HASH_KEY];\n    if (hash) return hash;\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash) return hash;\n\n      hash = getIENodeHash(obj);\n      if (hash) return hash;\n    }\n\n    if (Object.isExtensible && !Object.isExtensible(obj)) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (weakMap) {\n      weakMap.set(obj, hash);\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable &&\n               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function() {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = (function() {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }());\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1: // Element\n          return node.uniqueID;\n        case 9: // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var weakMap = typeof WeakMap === 'function' && new WeakMap();\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  function assertNotInfinite(size) {\n    invariant(\n      size !== Infinity,\n      'Cannot perform this action with an infinite size.'\n    );\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n      this._iter = indexed;\n      this._useKeys = useKeys;\n      this.size = indexed.size;\n    }\n\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n      return this._iter.get(key, notSetValue);\n    };\n\n    ToKeyedSequence.prototype.has = function(key) {\n      return this._iter.has(key);\n    };\n\n    ToKeyedSequence.prototype.valueSeq = function() {\n      return this._iter.valueSeq();\n    };\n\n    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n      var reversedSequence = reverseFactory(this, true);\n      if (!this._useKeys) {\n        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n      }\n      return reversedSequence;\n    };\n\n    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n      var mappedSequence = mapFactory(this, mapper, context);\n      if (!this._useKeys) {\n        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n      }\n      return mappedSequence;\n    };\n\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var ii;\n      return this._iter.__iterate(\n        this._useKeys ?\n          function(v, k)  {return fn(v, k, this$0)} :\n          ((ii = reverse ? resolveSize(this) : 0),\n            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n        reverse\n      );\n    };\n\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n      if (this._useKeys) {\n        return this._iter.__iterator(type, reverse);\n      }\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var ii = reverse ? resolveSize(this) : 0;\n      return new src_Iterator__Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n      });\n    };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToIndexedSequence.prototype.contains = function(value) {\n      return this._iter.contains(value);\n    };\n\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n    };\n\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      return new src_Iterator__Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, iterations++, step.value, step)\n      });\n    };\n\n\n\n  createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToSetSequence.prototype.has = function(key) {\n      return this._iter.contains(key);\n    };\n\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n    };\n\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new src_Iterator__Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, step.value, step.value, step);\n      });\n    };\n\n\n\n  createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n      this._iter = entries;\n      this.size = entries.size;\n    }\n\n    FromEntriesSequence.prototype.entrySeq = function() {\n      return this._iter.toSeq();\n    };\n\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(entry ) {\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          return fn(entry[1], entry[0], this$0);\n        }\n      }, reverse);\n    };\n\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new src_Iterator__Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          // Check if entry exists first so array access doesn't throw for holes\n          // in the parent iteration.\n          if (entry) {\n            validateEntry(entry);\n            return type === ITERATE_ENTRIES ? step :\n              iteratorValue(type, entry[0], entry[1], step);\n          }\n        }\n      });\n    };\n\n\n  ToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function()  {return iterable};\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function()  {return iterable.reverse()};\n      return reversedSequence;\n    };\n    flipSequence.has = function(key ) {return iterable.contains(key)};\n    flipSequence.contains = function(key ) {return iterable.has(key)};\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n    }\n    flipSequence.__iteratorUncached = function(type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new src_Iterator__Iterator(function()  {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(\n        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n        reverse\n      );\n    }\n    return flipSequence;\n  }\n\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function(key ) {return iterable.has(key)};\n    mappedSequence.get = function(key, notSetValue)  {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ?\n        notSetValue :\n        mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(\n        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n        reverse\n      );\n    }\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new src_Iterator__Iterator(function()  {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(\n          type,\n          key,\n          mapper.call(context, entry[1], key, iterable),\n          step\n        );\n      });\n    }\n    return mappedSequence;\n  }\n\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function()  {return iterable};\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function()  {return iterable.flip()};\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function(key, notSetValue) \n      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n    reversedSequence.has = function(key )\n      {return iterable.has(useKeys ? key : -1 - key)};\n    reversedSequence.contains = function(value ) {return iterable.contains(value)};\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n    };\n    reversedSequence.__iterator =\n      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n    return reversedSequence;\n  }\n\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function(key ) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function(key, notSetValue)  {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n          v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new src_Iterator__Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    }\n    return filterSequence;\n  }\n\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = src_Map__Map().asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        0,\n        function(a ) {return a + 1}\n      );\n    });\n    return groups.asImmutable();\n  }\n\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : src_Map__Map()).asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n      );\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n  }\n\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    var sliceSize = resolvedEnd - resolvedBegin;\n    if (sliceSize < 0) {\n      sliceSize = 0;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ?\n          iterable.get(index + resolvedBegin, notSetValue) :\n          notSetValue;\n      }\n    }\n\n    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k)  {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n                 iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function(type, reverse) {\n      if (sliceSize && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new src_Iterator__Iterator(function()  {\n        while (skipped++ !== resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    }\n\n    return sliceSeq;\n  }\n\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c) \n        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n      );\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new src_Iterator__Iterator(function()  {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new src_Iterator__Iterator(function()  {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function(v ) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ?\n          keyedSeqFromValue(v) :\n          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function(v ) {return v.size !== 0});\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable ||\n          isKeyedIterable && isKeyed(singleton) ||\n          isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(\n      function(sum, seq)  {\n        if (sum !== undefined) {\n          var size = seq.size;\n          if (size !== undefined) {\n            return sum + size;\n          }\n        }\n      },\n      0\n    );\n    return concatSeq;\n  }\n\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function(fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {var this$0 = this;\n        iter.__iterate(function(v, k)  {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    }\n    flatSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new src_Iterator__Iterator(function()  {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    }\n    return flatSequence;\n  }\n\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(\n      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n    ).flatten(true);\n  }\n\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k) \n        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n        fn(v, iterations++, this$0) !== false},\n        reverse\n      );\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new src_Iterator__Iterator(function()  {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ?\n          iteratorValue(type, iterations++, separator) :\n          iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(\n      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n    ).toArray();\n    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n      isKeyedIterable ?\n      function(v, i)  { entries[i].length = 2; } :\n      function(v, i)  { entries[i] = v[1]; }\n    );\n    return isKeyedIterable ? KeyedSeq(entries) :\n      isIndexed(iterable) ? IndexedSeq(entries) :\n      SetSeq(entries);\n  }\n\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq()\n        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n  }\n\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function(fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function(type, reverse) {\n      var iterators = iters.map(function(i )\n        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n      );\n      var iterations = 0;\n      var isDone = false;\n      return new src_Iterator__Iterator(function()  {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function(i ) {return i.next()});\n          isDone = steps.some(function(s ) {return s.done});\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(\n          type,\n          iterations++,\n          zipper.apply(null, steps.map(function(s ) {return s.value}))\n        );\n      });\n    };\n    return zipSequence\n  }\n\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable :\n      isIndexed(iterable) ? IndexedIterable :\n      SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create(\n      (\n        isKeyed(iterable) ? KeyedSeq :\n        isIndexed(iterable) ? IndexedSeq :\n        SetSeq\n      ).prototype\n    );\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(src_Map__Map, KeyedCollection);\n\n    // @pragma Construction\n\n    function src_Map__Map(value) {\n      return value === null || value === undefined ? emptyMap() :\n        isMap(value) ? value :\n        emptyMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    src_Map__Map.prototype.toString = function() {\n      return this.__toString('Map {', '}');\n    };\n\n    // @pragma Access\n\n    src_Map__Map.prototype.get = function(k, notSetValue) {\n      return this._root ?\n        this._root.get(0, undefined, k, notSetValue) :\n        notSetValue;\n    };\n\n    // @pragma Modification\n\n    src_Map__Map.prototype.set = function(k, v) {\n      return updateMap(this, k, v);\n    };\n\n    src_Map__Map.prototype.setIn = function(keyPath, v) {\n      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n    };\n\n    src_Map__Map.prototype.remove = function(k) {\n      return updateMap(this, k, NOT_SET);\n    };\n\n    src_Map__Map.prototype.deleteIn = function(keyPath) {\n      return this.updateIn(keyPath, function()  {return NOT_SET});\n    };\n\n    src_Map__Map.prototype.update = function(k, notSetValue, updater) {\n      return arguments.length === 1 ?\n        k(this) :\n        this.updateIn([k], notSetValue, updater);\n    };\n\n    src_Map__Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n      if (!updater) {\n        updater = notSetValue;\n        notSetValue = undefined;\n      }\n      var updatedValue = updateInDeepMap(\n        this,\n        forceIterator(keyPath),\n        notSetValue,\n        updater\n      );\n      return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n\n    src_Map__Map.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._root = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyMap();\n    };\n\n    // @pragma Composition\n\n    src_Map__Map.prototype.merge = function(/*...iters*/) {\n      return mergeIntoMapWith(this, undefined, arguments);\n    };\n\n    src_Map__Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, merger, iters);\n    };\n\n    src_Map__Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(keyPath, emptyMap(), function(m ) {return m.merge.apply(m, iters)});\n    };\n\n    src_Map__Map.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoMapWith(this, deepMerger(undefined), arguments);\n    };\n\n    src_Map__Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, deepMerger(merger), iters);\n    };\n\n    src_Map__Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(keyPath, emptyMap(), function(m ) {return m.mergeDeep.apply(m, iters)});\n    };\n\n    src_Map__Map.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator));\n    };\n\n    src_Map__Map.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n\n    // @pragma Mutability\n\n    src_Map__Map.prototype.withMutations = function(fn) {\n      var mutable = this.asMutable();\n      fn(mutable);\n      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n\n    src_Map__Map.prototype.asMutable = function() {\n      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n\n    src_Map__Map.prototype.asImmutable = function() {\n      return this.__ensureOwner();\n    };\n\n    src_Map__Map.prototype.wasAltered = function() {\n      return this.__altered;\n    };\n\n    src_Map__Map.prototype.__iterator = function(type, reverse) {\n      return new MapIterator(this, type, reverse);\n    };\n\n    src_Map__Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      this._root && this._root.iterate(function(entry ) {\n        iterations++;\n        return fn(entry[1], entry[0], this$0);\n      }, reverse);\n      return iterations;\n    };\n\n    src_Map__Map.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  src_Map__Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = src_Map__Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n\n  // #pragma Trie Nodes\n\n\n\n    function ArrayMapNode(ownerID, entries) {\n      this.ownerID = ownerID;\n      this.entries = entries;\n    }\n\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && entries.length === 1) {\n        return; // undefined\n      }\n\n      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n        return createNodes(ownerID, entries, key, value);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new ArrayMapNode(ownerID, newEntries);\n    };\n\n\n\n\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n      this.ownerID = ownerID;\n      this.bitmap = bitmap;\n      this.nodes = nodes;\n    }\n\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n      var bitmap = this.bitmap;\n      return (bitmap & bit) === 0 ? notSetValue :\n        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var bit = 1 << keyHashFrag;\n      var bitmap = this.bitmap;\n      var exists = (bitmap & bit) !== 0;\n\n      if (!exists && value === NOT_SET) {\n        return this;\n      }\n\n      var idx = popCount(bitmap & (bit - 1));\n      var nodes = this.nodes;\n      var node = exists ? nodes[idx] : undefined;\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n      if (newNode === node) {\n        return this;\n      }\n\n      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n      }\n\n      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n        return nodes[idx ^ 1];\n      }\n\n      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n        return newNode;\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n      var newNodes = exists ? newNode ?\n        setIn(nodes, idx, newNode, isEditable) :\n        spliceOut(nodes, idx, isEditable) :\n        spliceIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.bitmap = newBitmap;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n\n\n\n\n    function HashArrayMapNode(ownerID, count, nodes) {\n      this.ownerID = ownerID;\n      this.count = count;\n      this.nodes = nodes;\n    }\n\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var node = this.nodes[idx];\n      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var removed = value === NOT_SET;\n      var nodes = this.nodes;\n      var node = nodes[idx];\n\n      if (removed && !node) {\n        return this;\n      }\n\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n      if (newNode === node) {\n        return this;\n      }\n\n      var newCount = this.count;\n      if (!node) {\n        newCount++;\n      } else if (!newNode) {\n        newCount--;\n        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n          return packNodes(ownerID, nodes, newCount, idx);\n        }\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.count = newCount;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n\n\n\n\n    function HashCollisionNode(ownerID, keyHash, entries) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entries = entries;\n    }\n\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n\n      var removed = value === NOT_SET;\n\n      if (keyHash !== this.keyHash) {\n        if (removed) {\n          return this;\n        }\n        SetRef(didAlter);\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n      }\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && len === 2) {\n        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n\n\n\n\n    function ValueNode(ownerID, keyHash, entry) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entry = entry;\n    }\n\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n      var keyMatch = is(key, this.entry[0]);\n      if (keyMatch ? value === this.entry[1] : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n\n      if (removed) {\n        SetRef(didChangeSize);\n        return; // undefined\n      }\n\n      if (keyMatch) {\n        if (ownerID && ownerID === this.ownerID) {\n          this.entry[1] = value;\n          return this;\n        }\n        return new ValueNode(ownerID, this.keyHash, [key, value]);\n      }\n\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n    };\n\n\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate =\n  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  }\n\n  BitmapIndexedNode.prototype.iterate =\n  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  }\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  }\n\n  createClass(MapIterator, src_Iterator__Iterator);\n\n    function MapIterator(map, type, reverse) {\n      this._type = type;\n      this._reverse = reverse;\n      this._stack = map._root && mapIteratorFrame(map._root);\n    }\n\n    MapIterator.prototype.next = function() {\n      var type = this._type;\n      var stack = this._stack;\n      while (stack) {\n        var node = stack.node;\n        var index = stack.index++;\n        var maxIndex;\n        if (node.entry) {\n          if (index === 0) {\n            return mapIteratorValue(type, node.entry);\n          }\n        } else if (node.entries) {\n          maxIndex = node.entries.length - 1;\n          if (index <= maxIndex) {\n            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n          }\n        } else {\n          maxIndex = node.nodes.length - 1;\n          if (index <= maxIndex) {\n            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n            if (subNode) {\n              if (subNode.entry) {\n                return mapIteratorValue(type, subNode.entry);\n              }\n              stack = this._stack = mapIteratorFrame(subNode, stack);\n            }\n            continue;\n          }\n        }\n        stack = this._stack = this._stack.__prev;\n      }\n      return iteratorDone();\n    };\n\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ?\n      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(merger) {\n    return function(existing, value) \n      {return existing && existing.mergeDeepWith && isIterable(value) ?\n        existing.mergeDeepWith(merger, value) :\n        merger ? merger(existing, value) : value};\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function(x ) {return x.size !== 0});\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function(collection ) {\n      var mergeIntoMap = merger ?\n        function(value, key)  {\n          collection.update(key, NOT_SET, function(existing )\n            {return existing === NOT_SET ? value : merger(existing, value)}\n          );\n        } :\n        function(value, key)  {\n          collection.set(key, value);\n        }\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(\n      isNotSet || (existing && existing.set),\n      'invalid keyPath'\n    );\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(\n      nextExisting,\n      keyPathIter,\n      notSetValue,\n      updater\n    );\n    return nextUpdated === nextExisting ? existing :\n      nextUpdated === NOT_SET ? existing.remove(key) :\n      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - ((x >> 1) & 0x55555555);\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n    // @pragma Construction\n\n    function List(value) {\n      var empty = emptyList();\n      if (value === null || value === undefined) {\n        return empty;\n      }\n      if (isList(value)) {\n        return value;\n      }\n      var iter = IndexedIterable(value);\n      var size = iter.size;\n      if (size === 0) {\n        return empty;\n      }\n      assertNotInfinite(size);\n      if (size > 0 && size < SIZE) {\n        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n      }\n      return empty.withMutations(function(list ) {\n        list.setSize(size);\n        iter.forEach(function(v, i)  {return list.set(i, v)});\n      });\n    }\n\n    List.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    List.prototype.toString = function() {\n      return this.__toString('List [', ']');\n    };\n\n    // @pragma Access\n\n    List.prototype.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      if (index < 0 || index >= this.size) {\n        return notSetValue;\n      }\n      index += this._origin;\n      var node = listNodeFor(this, index);\n      return node && node.array[index & MASK];\n    };\n\n    // @pragma Modification\n\n    List.prototype.set = function(index, value) {\n      return updateList(this, index, value);\n    };\n\n    List.prototype.remove = function(index) {\n      return !this.has(index) ? this :\n        index === 0 ? this.shift() :\n        index === this.size - 1 ? this.pop() :\n        this.splice(index, 1);\n    };\n\n    List.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = this._origin = this._capacity = 0;\n        this._level = SHIFT;\n        this._root = this._tail = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyList();\n    };\n\n    List.prototype.push = function(/*...values*/) {\n      var values = arguments;\n      var oldSize = this.size;\n      return this.withMutations(function(list ) {\n        setListBounds(list, 0, oldSize + values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(oldSize + ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.pop = function() {\n      return setListBounds(this, 0, -1);\n    };\n\n    List.prototype.unshift = function(/*...values*/) {\n      var values = arguments;\n      return this.withMutations(function(list ) {\n        setListBounds(list, -values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.shift = function() {\n      return setListBounds(this, 1);\n    };\n\n    // @pragma Composition\n\n    List.prototype.merge = function(/*...iters*/) {\n      return mergeIntoListWith(this, undefined, arguments);\n    };\n\n    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, merger, iters);\n    };\n\n    List.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoListWith(this, deepMerger(undefined), arguments);\n    };\n\n    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, deepMerger(merger), iters);\n    };\n\n    List.prototype.setSize = function(size) {\n      return setListBounds(this, 0, size);\n    };\n\n    // @pragma Iteration\n\n    List.prototype.slice = function(begin, end) {\n      var size = this.size;\n      if (wholeSlice(begin, end, size)) {\n        return this;\n      }\n      return setListBounds(\n        this,\n        resolveBegin(begin, size),\n        resolveEnd(end, size)\n      );\n    };\n\n    List.prototype.__iterator = function(type, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      return new src_Iterator__Iterator(function()  {\n        var value = values();\n        return value === DONE ?\n          iteratorDone() :\n          iteratorValue(type, index++, value);\n      });\n    };\n\n    List.prototype.__iterate = function(fn, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      var value;\n      while ((value = values()) !== DONE) {\n        if (fn(value, index++, this) === false) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    List.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        return this;\n      }\n      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn =\n  ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n\n    function VNode(array, ownerID) {\n      this.array = array;\n      this.ownerID = ownerID;\n    }\n\n    // TODO: seems like these methods are very similar\n\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var originIndex = (index >>> level) & MASK;\n      if (originIndex >= this.array.length) {\n        return new VNode([], ownerID);\n      }\n      var removingFirst = originIndex === 0;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[originIndex];\n        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingFirst) {\n          return this;\n        }\n      }\n      if (removingFirst && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingFirst) {\n        for (var ii = 0; ii < originIndex; ii++) {\n          editable.array[ii] = undefined;\n        }\n      }\n      if (newChild) {\n        editable.array[originIndex] = newChild;\n      }\n      return editable;\n    };\n\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var sizeIndex = ((index - 1) >>> level) & MASK;\n      if (sizeIndex >= this.array.length) {\n        return this;\n      }\n      var removingLast = sizeIndex === this.array.length - 1;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[sizeIndex];\n        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingLast) {\n          return this;\n        }\n      }\n      if (removingLast && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingLast) {\n        editable.array.pop();\n      }\n      if (newChild) {\n        editable.array[sizeIndex] = newChild;\n      }\n      return editable;\n    };\n\n\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ?\n        iterateLeaf(node, offset) :\n        iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : (left - offset) >> level;\n      var to = ((right - offset) >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(\n            array && array[idx], level - SHIFT, offset + (idx << level)\n          );\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function(list ) {\n        index < 0 ?\n          setListBounds(list, index).set(0, value) :\n          setListBounds(list, 0, index + 1).set(index, value)\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = (index >>> level) & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << (list._level + SHIFT)) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[(rawIndex >>> level) & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might require creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might require creating a higher root.\n    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ?\n      listNodeFor(list, newCapacity - 1) :\n      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = (oldTailOffset >>> level) & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = (newOrigin >>> newLevel) & MASK;\n        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n  }\n\n  createClass(OrderedMap, src_Map__Map);\n\n    // @pragma Construction\n\n    function OrderedMap(value) {\n      return value === null || value === undefined ? emptyOrderedMap() :\n        isOrderedMap(value) ? value :\n        emptyOrderedMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    OrderedMap.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedMap.prototype.toString = function() {\n      return this.__toString('OrderedMap {', '}');\n    };\n\n    // @pragma Access\n\n    OrderedMap.prototype.get = function(k, notSetValue) {\n      var index = this._map.get(k);\n      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n\n    // @pragma Modification\n\n    OrderedMap.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._map.clear();\n        this._list.clear();\n        return this;\n      }\n      return emptyOrderedMap();\n    };\n\n    OrderedMap.prototype.set = function(k, v) {\n      return updateOrderedMap(this, k, v);\n    };\n\n    OrderedMap.prototype.remove = function(k) {\n      return updateOrderedMap(this, k, NOT_SET);\n    };\n\n    OrderedMap.prototype.wasAltered = function() {\n      return this._map.wasAltered() || this._list.wasAltered();\n    };\n\n    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._list.__iterate(\n        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n        reverse\n      );\n    };\n\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n      return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      var newList = this._list.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        this._list = newList;\n        return this;\n      }\n      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) { // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(Stack, IndexedCollection);\n\n    // @pragma Construction\n\n    function Stack(value) {\n      return value === null || value === undefined ? emptyStack() :\n        isStack(value) ? value :\n        emptyStack().unshiftAll(value);\n    }\n\n    Stack.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Stack.prototype.toString = function() {\n      return this.__toString('Stack [', ']');\n    };\n\n    // @pragma Access\n\n    Stack.prototype.get = function(index, notSetValue) {\n      var head = this._head;\n      index = wrapIndex(this, index);\n      while (head && index--) {\n        head = head.next;\n      }\n      return head ? head.value : notSetValue;\n    };\n\n    Stack.prototype.peek = function() {\n      return this._head && this._head.value;\n    };\n\n    // @pragma Modification\n\n    Stack.prototype.push = function(/*...values*/) {\n      if (arguments.length === 0) {\n        return this;\n      }\n      var newSize = this.size + arguments.length;\n      var head = this._head;\n      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n        head = {\n          value: arguments[ii],\n          next: head\n        };\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pushAll = function(iter) {\n      iter = IndexedIterable(iter);\n      if (iter.size === 0) {\n        return this;\n      }\n      assertNotInfinite(iter.size);\n      var newSize = this.size;\n      var head = this._head;\n      iter.reverse().forEach(function(value ) {\n        newSize++;\n        head = {\n          value: value,\n          next: head\n        };\n      });\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pop = function() {\n      return this.slice(1);\n    };\n\n    Stack.prototype.unshift = function(/*...values*/) {\n      return this.push.apply(this, arguments);\n    };\n\n    Stack.prototype.unshiftAll = function(iter) {\n      return this.pushAll(iter);\n    };\n\n    Stack.prototype.shift = function() {\n      return this.pop.apply(this, arguments);\n    };\n\n    Stack.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._head = undefined;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyStack();\n    };\n\n    Stack.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      var resolvedBegin = resolveBegin(begin, this.size);\n      var resolvedEnd = resolveEnd(end, this.size);\n      if (resolvedEnd !== this.size) {\n        // super.slice(begin, end);\n        return IndexedCollection.prototype.slice.call(this, begin, end);\n      }\n      var newSize = this.size - resolvedBegin;\n      var head = this._head;\n      while (resolvedBegin--) {\n        head = head.next;\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    // @pragma Mutability\n\n    Stack.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n\n    // @pragma Iteration\n\n    Stack.prototype.__iterate = function(fn, reverse) {\n      if (reverse) {\n        return this.reverse().__iterate(fn);\n      }\n      var iterations = 0;\n      var node = this._head;\n      while (node) {\n        if (fn(node.value, iterations++, this) === false) {\n          break;\n        }\n        node = node.next;\n      }\n      return iterations;\n    };\n\n    Stack.prototype.__iterator = function(type, reverse) {\n      if (reverse) {\n        return this.reverse().__iterator(type);\n      }\n      var iterations = 0;\n      var node = this._head;\n      return new src_Iterator__Iterator(function()  {\n        if (node) {\n          var value = node.value;\n          node = node.next;\n          return iteratorValue(type, iterations++, value);\n        }\n        return iteratorDone();\n      });\n    };\n\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  createClass(src_Set__Set, SetCollection);\n\n    // @pragma Construction\n\n    function src_Set__Set(value) {\n      return value === null || value === undefined ? emptySet() :\n        isSet(value) ? value :\n        emptySet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    src_Set__Set.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    src_Set__Set.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    src_Set__Set.prototype.toString = function() {\n      return this.__toString('Set {', '}');\n    };\n\n    // @pragma Access\n\n    src_Set__Set.prototype.has = function(value) {\n      return this._map.has(value);\n    };\n\n    // @pragma Modification\n\n    src_Set__Set.prototype.add = function(value) {\n      return updateSet(this, this._map.set(value, true));\n    };\n\n    src_Set__Set.prototype.remove = function(value) {\n      return updateSet(this, this._map.remove(value));\n    };\n\n    src_Set__Set.prototype.clear = function() {\n      return updateSet(this, this._map.clear());\n    };\n\n    // @pragma Composition\n\n    src_Set__Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n      iters = iters.filter(function(x ) {return x.size !== 0});\n      if (iters.length === 0) {\n        return this;\n      }\n      if (this.size === 0 && iters.length === 1) {\n        return this.constructor(iters[0]);\n      }\n      return this.withMutations(function(set ) {\n        for (var ii = 0; ii < iters.length; ii++) {\n          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n        }\n      });\n    };\n\n    src_Set__Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (!iters.every(function(iter ) {return iter.contains(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    src_Set__Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (iters.some(function(iter ) {return iter.contains(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    src_Set__Set.prototype.merge = function() {\n      return this.union.apply(this, arguments);\n    };\n\n    src_Set__Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return this.union.apply(this, iters);\n    };\n\n    src_Set__Set.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator));\n    };\n\n    src_Set__Set.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n\n    src_Set__Set.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    src_Set__Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n    };\n\n    src_Set__Set.prototype.__iterator = function(type, reverse) {\n      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n    };\n\n    src_Set__Set.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return this.__make(newMap, ownerID);\n    };\n\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  src_Set__Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = src_Set__Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set :\n      newMap.size === 0 ? set.__empty() :\n      set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, src_Set__Set);\n\n    // @pragma Construction\n\n    function OrderedSet(value) {\n      return value === null || value === undefined ? emptyOrderedSet() :\n        isOrderedSet(value) ? value :\n        emptyOrderedSet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    OrderedSet.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedSet.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    OrderedSet.prototype.toString = function() {\n      return this.__toString('OrderedSet {', '}');\n    };\n\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Record, KeyedCollection);\n\n    function Record(defaultValues, name) {\n      var RecordType = function Record(values) {\n        if (!(this instanceof RecordType)) {\n          return new RecordType(values);\n        }\n        this._map = src_Map__Map(values);\n      };\n\n      var keys = Object.keys(defaultValues);\n\n      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n      RecordTypePrototype.constructor = RecordType;\n      name && (RecordTypePrototype._name = name);\n      RecordTypePrototype._defaultValues = defaultValues;\n      RecordTypePrototype._keys = keys;\n      RecordTypePrototype.size = keys.length;\n\n      try {\n        keys.forEach(function(key ) {\n          Object.defineProperty(RecordType.prototype, key, {\n            get: function() {\n              return this.get(key);\n            },\n            set: function(value) {\n              invariant(this.__ownerID, 'Cannot set on an immutable record.');\n              this.set(key, value);\n            }\n          });\n        });\n      } catch (error) {\n        // Object.defineProperty failed. Probably IE8.\n      }\n\n      return RecordType;\n    }\n\n    Record.prototype.toString = function() {\n      return this.__toString(recordName(this) + ' {', '}');\n    };\n\n    // @pragma Access\n\n    Record.prototype.has = function(k) {\n      return this._defaultValues.hasOwnProperty(k);\n    };\n\n    Record.prototype.get = function(k, notSetValue) {\n      if (!this.has(k)) {\n        return notSetValue;\n      }\n      var defaultVal = this._defaultValues[k];\n      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n\n    // @pragma Modification\n\n    Record.prototype.clear = function() {\n      if (this.__ownerID) {\n        this._map && this._map.clear();\n        return this;\n      }\n      var SuperRecord = Object.getPrototypeOf(this).constructor;\n      return SuperRecord._empty || (SuperRecord._empty = makeRecord(this, emptyMap()));\n    };\n\n    Record.prototype.set = function(k, v) {\n      if (!this.has(k)) {\n        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n      }\n      var newMap = this._map && this._map.set(k, v);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.remove = function(k) {\n      if (!this.has(k)) {\n        return this;\n      }\n      var newMap = this._map && this._map.remove(k);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n    };\n\n    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n    };\n\n    Record.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map && this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return makeRecord(this, newMap, ownerID);\n    };\n\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn =\n  RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (\n      !isIterable(b) ||\n      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n      isKeyed(a) !== isKeyed(b) ||\n      isIndexed(a) !== isIndexed(b) ||\n      isOrdered(a) !== isOrdered(b)\n    ) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function(v, k)  {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        a.cacheResult();\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function(v, k)  {\n      if (notAssociative ? !a.has(v) :\n          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Range, IndexedSeq);\n\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        return new Range(start, end, step);\n      }\n      invariant(step !== 0, 'Cannot step a Range by 0');\n      start = start || 0;\n      if (end === undefined) {\n        end = Infinity;\n      }\n      step = step === undefined ? 1 : Math.abs(step);\n      if (end < start) {\n        step = -step;\n      }\n      this._start = start;\n      this._end = end;\n      this._step = step;\n      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n      if (this.size === 0) {\n        if (EMPTY_RANGE) {\n          return EMPTY_RANGE;\n        }\n        EMPTY_RANGE = this;\n      }\n    }\n\n    Range.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Range []';\n      }\n      return 'Range [ ' +\n        this._start + '...' + this._end +\n        (this._step > 1 ? ' by ' + this._step : '') +\n      ' ]';\n    };\n\n    Range.prototype.get = function(index, notSetValue) {\n      return this.has(index) ?\n        this._start + wrapIndex(this, index) * this._step :\n        notSetValue;\n    };\n\n    Range.prototype.contains = function(searchValue) {\n      var possibleIndex = (searchValue - this._start) / this._step;\n      return possibleIndex >= 0 &&\n        possibleIndex < this.size &&\n        possibleIndex === Math.floor(possibleIndex);\n    };\n\n    Range.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      begin = resolveBegin(begin, this.size);\n      end = resolveEnd(end, this.size);\n      if (end <= begin) {\n        return new Range(0, 0);\n      }\n      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n\n    Range.prototype.indexOf = function(searchValue) {\n      var offsetValue = searchValue - this._start;\n      if (offsetValue % this._step === 0) {\n        var index = offsetValue / this._step;\n        if (index >= 0 && index < this.size) {\n          return index\n        }\n      }\n      return -1;\n    };\n\n    Range.prototype.lastIndexOf = function(searchValue) {\n      return this.indexOf(searchValue);\n    };\n\n    Range.prototype.__iterate = function(fn, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(value, ii, this) === false) {\n          return ii + 1;\n        }\n        value += reverse ? -step : step;\n      }\n      return ii;\n    };\n\n    Range.prototype.__iterator = function(type, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      var ii = 0;\n      return new src_Iterator__Iterator(function()  {\n        var v = value;\n        value += reverse ? -step : step;\n        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n      });\n    };\n\n    Range.prototype.equals = function(other) {\n      return other instanceof Range ?\n        this._start === other._start &&\n        this._end === other._end &&\n        this._step === other._step :\n        deepEqual(this, other);\n    };\n\n\n  var EMPTY_RANGE;\n\n  createClass(Repeat, IndexedSeq);\n\n    function Repeat(value, times) {\n      if (!(this instanceof Repeat)) {\n        return new Repeat(value, times);\n      }\n      this._value = value;\n      this.size = times === undefined ? Infinity : Math.max(0, times);\n      if (this.size === 0) {\n        if (EMPTY_REPEAT) {\n          return EMPTY_REPEAT;\n        }\n        EMPTY_REPEAT = this;\n      }\n    }\n\n    Repeat.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Repeat []';\n      }\n      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n    };\n\n    Repeat.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._value : notSetValue;\n    };\n\n    Repeat.prototype.contains = function(searchValue) {\n      return is(this._value, searchValue);\n    };\n\n    Repeat.prototype.slice = function(begin, end) {\n      var size = this.size;\n      return wholeSlice(begin, end, size) ? this :\n        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n\n    Repeat.prototype.reverse = function() {\n      return this;\n    };\n\n    Repeat.prototype.indexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return 0;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return this.size;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.__iterate = function(fn, reverse) {\n      for (var ii = 0; ii < this.size; ii++) {\n        if (fn(this._value, ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      var ii = 0;\n      return new src_Iterator__Iterator(function() \n        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n      );\n    };\n\n    Repeat.prototype.equals = function(other) {\n      return other instanceof Repeat ?\n        is(this._value, other._value) :\n        deepEqual(other);\n    };\n\n\n  var EMPTY_REPEAT;\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols &&\n      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = src_Iterator__Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n      return array;\n    },\n\n    toIndexedSeq: function() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n      ).__toJS();\n    },\n\n    toJSON: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n      ).__toJS();\n    },\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return src_Map__Map(this.toKeyedSeq());\n    },\n\n    toObject: function() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function(v, k)  { object[k] = v; });\n      return object;\n    },\n\n    toOrderedMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return src_Set__Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function() {\n      return isIndexed(this) ? this.toIndexedSeq() :\n        isKeyed(this) ? this.toKeyedSeq() :\n        this.toSetSeq();\n    },\n\n    toStack: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n\n    // ### Common JavaScript methods and properties\n\n    toString: function() {\n      return '[Iterable]';\n    },\n\n    __toString: function(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function() {var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    contains: function(searchValue) {\n      return this.some(function(value ) {return is(value, searchValue)});\n    },\n\n    entries: function() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function(v, k, c)  {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    findEntry: function(predicate, context) {\n      var found;\n      this.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findLastEntry: function(predicate, context) {\n      return this.toSeq().reverse().findEntry(predicate, context);\n    },\n\n    forEach: function(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function(v ) {\n        isFirst ? (isFirst = false) : (joined += separator);\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function(v, k, c)  {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n\n    // ### More sequential methods\n\n    butLast: function() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n    },\n\n    count: function(predicate, context) {\n      return ensureSize(\n        predicate ? this.toSeq().filter(predicate, context) : this\n      );\n    },\n\n    countBy: function(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n      return entriesSequence;\n    },\n\n    filterNot: function(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findLast: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    first: function() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function(searchKey, notSetValue) {\n      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n    },\n\n    getIn: function(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function(iter) {\n      iter = typeof iter.contains === 'function' ? iter : Iterable(iter);\n      return this.every(function(value ) {return iter.contains(value)});\n    },\n\n    isSuperset: function(iter) {\n      return iter.isSubset(this);\n    },\n\n    keySeq: function() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function() {\n      return this.toSeq().reverse().first();\n    },\n\n    max: function(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function() {\n      return this.slice(1);\n    },\n\n    skip: function(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function() {\n      return this.toIndexedSeq();\n    },\n\n\n    // ### Hashable Object\n\n    hashCode: function() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    },\n\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect =\n  IterablePrototype.toSource = function() { return this.toString(); };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n\n  // Temporary warning about using length\n  (function () {\n    try {\n      Object.defineProperty(IterablePrototype, 'length', {\n        get: function () {\n          if (!Iterable.noLengthWarning) {\n            var stack;\n            try {\n              throw new Error();\n            } catch (error) {\n              stack = error.stack;\n            }\n            if (stack.indexOf('_wrapObject') === -1) {\n              console && console.warn && console.warn(\n                'iterable.length has been deprecated, '+\n                'use iterable.size or iterable.count(). '+\n                'This warning will become a silent error in a future version. ' +\n                stack\n              );\n              return this.size;\n            }\n          }\n        }\n      });\n    } catch (e) {}\n  })();\n\n\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function() {\n      return reify(this, flipFactory(this));\n    },\n\n    findKey: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLastKey: function(predicate, context) {\n      return this.toSeq().reverse().findKey(predicate, context);\n    },\n\n    keyOf: function(searchValue) {\n      return this.findKey(function(value ) {return is(value, searchValue)});\n    },\n\n    lastKeyOf: function(searchValue) {\n      return this.findLastKey(function(value ) {return is(value, searchValue)});\n    },\n\n    mapEntries: function(mapper, context) {var this$0 = this;\n      var iterations = 0;\n      return reify(this,\n        this.toSeq().map(\n          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n        ).fromEntrySeq()\n      );\n    },\n\n    mapKeys: function(mapper, context) {var this$0 = this;\n      return reify(this,\n        this.toSeq().flip().map(\n          function(k, v)  {return mapper.call(context, k, v, this$0)}\n        ).flip()\n      );\n    },\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return k + ': ' + quoteString(v)};\n\n\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, false);\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function(searchValue) {\n      var key = this.toKeyedSeq().keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function(searchValue) {\n      return this.toSeq().reverse().indexOf(searchValue);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n        return this;\n      }\n      index = resolveBegin(index, this.size);\n      var spliced = this.slice(0, index);\n      return reify(\n        this,\n        numArgs === 1 ?\n          spliced :\n          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n      );\n    },\n\n\n    // ### More collection methods\n\n    findLastIndex: function(predicate, context) {\n      var key = this.toKeyedSeq().findLastKey(predicate, context);\n      return key === undefined ? -1 : key;\n    },\n\n    first: function() {\n      return this.get(0);\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return (index < 0 || (this.size === Infinity ||\n          (this.size !== undefined && index > this.size))) ?\n        notSetValue :\n        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n    },\n\n    has: function(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ?\n        this.size === Infinity || index < this.size :\n        this.indexOf(index) !== -1\n      );\n    },\n\n    interpose: function(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function(/*...iterables*/) {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    last: function() {\n      return this.get(-1);\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function(/*, ...iterables */) {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function(zipper/*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    },\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    contains: function(value) {\n      return this.has(value);\n    },\n\n\n    // ### More sequential methods\n\n    keySeq: function() {\n      return this.valueSeq();\n    },\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.contains;\n\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    }\n  }\n\n  function neg(predicate) {\n    return function() {\n      return -predicate.apply(this, arguments);\n    }\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : value;\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(\n      keyed ?\n        ordered ?\n          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n        ordered ?\n          function(v ) { h = 31 * h + hash(v) | 0; } :\n          function(v ) { h = h + hash(v) | 0; }\n    );\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = src_Math__imul(h, 0xCC9E2D51);\n    h = src_Math__imul(h << 15 | h >>> -15, 0x1B873593);\n    h = src_Math__imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = src_Math__imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = src_Math__imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: src_Map__Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: src_Set__Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS,\n\n  };\n\n  return Immutable;\n\n}));",
    "var baseFlatten = require('../internal/baseFlatten'), isIterateeCall = require('../internal/isIterateeCall');\nfunction flatten(array, isDeep, guard) {\n    var length = array ? array.length : 0;\n    if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n    }\n    return length ? baseFlatten(array, isDeep, false, 0) : [];\n}\nmodule.exports = flatten;",
    "var undefined;\nfunction last(array) {\n    var length = array ? array.length : 0;\n    return length ? array[length - 1] : undefined;\n}\nmodule.exports = last;",
    "var baseIndexOf = require('../internal/baseIndexOf');\nvar arrayProto = Array.prototype;\nvar splice = arrayProto.splice;\nfunction pull() {\n    var args = arguments, array = args[0];\n    if (!(array && array.length)) {\n        return array;\n    }\n    var index = 0, indexOf = baseIndexOf, length = args.length;\n    while (++index < length) {\n        var fromIndex = 0, value = args[index];\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n            splice.call(array, fromIndex, 1);\n        }\n    }\n    return array;\n}\nmodule.exports = pull;",
    "var includes = require('./includes');\nmodule.exports = includes;",
    "var baseIndexOf = require('../internal/baseIndexOf'), isArray = require('../lang/isArray'), isLength = require('../internal/isLength'), isString = require('../lang/isString'), values = require('../object/values');\nvar nativeMax = Math.max;\nfunction includes(collection, target, fromIndex) {\n    var length = collection ? collection.length : 0;\n    if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n    }\n    if (!length) {\n        return false;\n    }\n    if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex || 0;\n    } else {\n        fromIndex = 0;\n    }\n    return typeof collection == 'string' || !isArray(collection) && isString(collection) ? fromIndex < length && collection.indexOf(target, fromIndex) > -1 : baseIndexOf(collection, target, fromIndex) > -1;\n}\nmodule.exports = includes;",
    "function arrayCopy(source, array) {\n    var index = -1, length = source.length;\n    array || (array = Array(length));\n    while (++index < length) {\n        array[index] = source[index];\n    }\n    return array;\n}\nmodule.exports = arrayCopy;",
    "function arrayEach(array, iteratee) {\n    var index = -1, length = array.length;\n    while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n            break;\n        }\n    }\n    return array;\n}\nmodule.exports = arrayEach;",
    "function assignDefaults(objectValue, sourceValue) {\n    return typeof objectValue == 'undefined' ? sourceValue : objectValue;\n}\nmodule.exports = assignDefaults;",
    "var baseCopy = require('./baseCopy'), keys = require('../object/keys');\nfunction baseAssign(object, source, customizer) {\n    var props = keys(source);\n    if (!customizer) {\n        return baseCopy(source, object, props);\n    }\n    var index = -1, length = props.length;\n    while (++index < length) {\n        var key = props[index], value = object[key], result = customizer(value, source[key], key, object, source);\n        if ((result === result ? result !== value : value === value) || typeof value == 'undefined' && !(key in object)) {\n            object[key] = result;\n        }\n    }\n    return object;\n}\nmodule.exports = baseAssign;",
    "var arrayCopy = require('./arrayCopy'), arrayEach = require('./arrayEach'), baseCopy = require('./baseCopy'), baseForOwn = require('./baseForOwn'), initCloneArray = require('./initCloneArray'), initCloneByTag = require('./initCloneByTag'), initCloneObject = require('./initCloneObject'), isArray = require('../lang/isArray'), isObject = require('../lang/isObject'), keys = require('../object/keys');\nvar argsTag = '[object Arguments]', arrayTag = '[object Array]', boolTag = '[object Boolean]', dateTag = '[object Date]', errorTag = '[object Error]', funcTag = '[object Function]', mapTag = '[object Map]', numberTag = '[object Number]', objectTag = '[object Object]', regexpTag = '[object RegExp]', setTag = '[object Set]', stringTag = '[object String]', weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]', float32Tag = '[object Float32Array]', float64Tag = '[object Float64Array]', int8Tag = '[object Int8Array]', int16Tag = '[object Int16Array]', int32Tag = '[object Int32Array]', uint8Tag = '[object Uint8Array]', uint8ClampedTag = '[object Uint8ClampedArray]', uint16Tag = '[object Uint16Array]', uint32Tag = '[object Uint32Array]';\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[stringTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[mapTag] = cloneableTags[setTag] = cloneableTags[weakMapTag] = false;\nvar objectProto = Object.prototype;\nvar objToString = objectProto.toString;\nfunction baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n    var result;\n    if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n    }\n    if (typeof result != 'undefined') {\n        return result;\n    }\n    if (!isObject(value)) {\n        return value;\n    }\n    var isArr = isArray(value);\n    if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n            return arrayCopy(value, result);\n        }\n    } else {\n        var tag = objToString.call(value), isFunc = tag == funcTag;\n        if (tag == objectTag || tag == argsTag || isFunc && !object) {\n            result = initCloneObject(isFunc ? {} : value);\n            if (!isDeep) {\n                return baseCopy(value, result, keys(value));\n            }\n        } else {\n            return cloneableTags[tag] ? initCloneByTag(value, tag, isDeep) : object ? value : {};\n        }\n    }\n    stackA || (stackA = []);\n    stackB || (stackB = []);\n    var length = stackA.length;\n    while (length--) {\n        if (stackA[length] == value) {\n            return stackB[length];\n        }\n    }\n    stackA.push(value);\n    stackB.push(result);\n    (isArr ? arrayEach : baseForOwn)(value, function (subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n    });\n    return result;\n}\nmodule.exports = baseClone;",
    "function baseCopy(source, object, props) {\n    if (!props) {\n        props = object;\n        object = {};\n    }\n    var index = -1, length = props.length;\n    while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n    }\n    return object;\n}\nmodule.exports = baseCopy;",
    "var isArguments = require('../lang/isArguments'), isArray = require('../lang/isArray'), isLength = require('./isLength'), isObjectLike = require('./isObjectLike');\nfunction baseFlatten(array, isDeep, isStrict, fromIndex) {\n    var index = fromIndex - 1, length = array.length, resIndex = -1, result = [];\n    while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isLength(value.length) && (isArray(value) || isArguments(value))) {\n            if (isDeep) {\n                value = baseFlatten(value, isDeep, isStrict, 0);\n            }\n            var valIndex = -1, valLength = value.length;\n            result.length += valLength;\n            while (++valIndex < valLength) {\n                result[++resIndex] = value[valIndex];\n            }\n        } else if (!isStrict) {\n            result[++resIndex] = value;\n        }\n    }\n    return result;\n}\nmodule.exports = baseFlatten;",
    "var toObject = require('./toObject');\nfunction baseFor(object, iteratee, keysFunc) {\n    var index = -1, iterable = toObject(object), props = keysFunc(object), length = props.length;\n    while (++index < length) {\n        var key = props[index];\n        if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n        }\n    }\n    return object;\n}\nmodule.exports = baseFor;",
    "var baseFor = require('./baseFor'), keysIn = require('../object/keysIn');\nfunction baseForIn(object, iteratee) {\n    return baseFor(object, iteratee, keysIn);\n}\nmodule.exports = baseForIn;",
    "var baseFor = require('./baseFor'), keys = require('../object/keys');\nfunction baseForOwn(object, iteratee) {\n    return baseFor(object, iteratee, keys);\n}\nmodule.exports = baseForOwn;",
    "var indexOfNaN = require('./indexOfNaN');\nfunction baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n        return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1, length = array.length;\n    while (++index < length) {\n        if (array[index] === value) {\n            return index;\n        }\n    }\n    return -1;\n}\nmodule.exports = baseIndexOf;",
    "var arrayEach = require('./arrayEach'), baseForOwn = require('./baseForOwn'), baseMergeDeep = require('./baseMergeDeep'), isArray = require('../lang/isArray'), isLength = require('./isLength'), isObject = require('../lang/isObject'), isObjectLike = require('./isObjectLike'), isTypedArray = require('../lang/isTypedArray');\nvar undefined;\nfunction baseMerge(object, source, customizer, stackA, stackB) {\n    if (!isObject(object)) {\n        return object;\n    }\n    var isSrcArr = isLength(source.length) && (isArray(source) || isTypedArray(source));\n    (isSrcArr ? arrayEach : baseForOwn)(source, function (srcValue, key, source) {\n        if (isObjectLike(srcValue)) {\n            stackA || (stackA = []);\n            stackB || (stackB = []);\n            return baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        var value = object[key], result = customizer ? customizer(value, srcValue, key, object, source) : undefined, isCommon = typeof result == 'undefined';\n        if (isCommon) {\n            result = srcValue;\n        }\n        if ((isSrcArr || typeof result != 'undefined') && (isCommon || (result === result ? result !== value : value === value))) {\n            object[key] = result;\n        }\n    });\n    return object;\n}\nmodule.exports = baseMerge;",
    "var arrayCopy = require('./arrayCopy'), isArguments = require('../lang/isArguments'), isArray = require('../lang/isArray'), isLength = require('./isLength'), isPlainObject = require('../lang/isPlainObject'), isTypedArray = require('../lang/isTypedArray'), toPlainObject = require('../lang/toPlainObject');\nvar undefined;\nfunction baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n    var length = stackA.length, srcValue = source[key];\n    while (length--) {\n        if (stackA[length] == srcValue) {\n            object[key] = stackB[length];\n            return;\n        }\n    }\n    var value = object[key], result = customizer ? customizer(value, srcValue, key, object, source) : undefined, isCommon = typeof result == 'undefined';\n    if (isCommon) {\n        result = srcValue;\n        if (isLength(srcValue.length) && (isArray(srcValue) || isTypedArray(srcValue))) {\n            result = isArray(value) ? value : value ? arrayCopy(value) : [];\n        } else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n            result = isArguments(value) ? toPlainObject(value) : isPlainObject(value) ? value : {};\n        } else {\n            isCommon = false;\n        }\n    }\n    stackA.push(srcValue);\n    stackB.push(result);\n    if (isCommon) {\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n    } else if (result === result ? result !== value : value === value) {\n        object[key] = result;\n    }\n}\nmodule.exports = baseMergeDeep;",
    "function baseToString(value) {\n    if (typeof value == 'string') {\n        return value;\n    }\n    return value == null ? '' : value + '';\n}\nmodule.exports = baseToString;",
    "function baseValues(object, props) {\n    var index = -1, length = props.length, result = Array(length);\n    while (++index < length) {\n        result[index] = object[props[index]];\n    }\n    return result;\n}\nmodule.exports = baseValues;",
    "var identity = require('../utility/identity');\nfunction bindCallback(func, thisArg, argCount) {\n    if (typeof func != 'function') {\n        return identity;\n    }\n    if (typeof thisArg == 'undefined') {\n        return func;\n    }\n    switch (argCount) {\n    case 1:\n        return function (value) {\n            return func.call(thisArg, value);\n        };\n    case 3:\n        return function (value, index, collection) {\n            return func.call(thisArg, value, index, collection);\n        };\n    case 4:\n        return function (accumulator, value, index, collection) {\n            return func.call(thisArg, accumulator, value, index, collection);\n        };\n    case 5:\n        return function (value, other, key, object, source) {\n            return func.call(thisArg, value, other, key, object, source);\n        };\n    }\n    return function () {\n        return func.apply(thisArg, arguments);\n    };\n}\nmodule.exports = bindCallback;",
    "var constant = require('../utility/constant'), isNative = require('../lang/isNative'), root = require('./root');\nvar ArrayBuffer = isNative(ArrayBuffer = root.ArrayBuffer) && ArrayBuffer, bufferSlice = isNative(bufferSlice = ArrayBuffer && new ArrayBuffer(0).slice) && bufferSlice, floor = Math.floor, Uint8Array = isNative(Uint8Array = root.Uint8Array) && Uint8Array;\nvar Float64Array = function () {\n        try {\n            var func = isNative(func = root.Float64Array) && func, result = new func(new ArrayBuffer(10), 0, 1) && func;\n        } catch (e) {\n        }\n        return result;\n    }();\nvar FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\nfunction bufferClone(buffer) {\n    return bufferSlice.call(buffer, 0);\n}\nif (!bufferSlice) {\n    bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function (buffer) {\n        var byteLength = buffer.byteLength, floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0, offset = floatLength * FLOAT64_BYTES_PER_ELEMENT, result = new ArrayBuffer(byteLength);\n        if (floatLength) {\n            var view = new Float64Array(result, 0, floatLength);\n            view.set(new Float64Array(buffer, 0, floatLength));\n        }\n        if (byteLength != offset) {\n            view = new Uint8Array(result, offset);\n            view.set(new Uint8Array(buffer, offset));\n        }\n        return result;\n    };\n}\nmodule.exports = bufferClone;",
    "var bindCallback = require('./bindCallback'), isIterateeCall = require('./isIterateeCall');\nfunction createAssigner(assigner) {\n    return function () {\n        var args = arguments, length = args.length, object = args[0];\n        if (length < 2 || object == null) {\n            return object;\n        }\n        var customizer = args[length - 2], thisArg = args[length - 1], guard = args[3];\n        if (length > 3 && typeof customizer == 'function') {\n            customizer = bindCallback(customizer, thisArg, 5);\n            length -= 2;\n        } else {\n            customizer = length > 2 && typeof thisArg == 'function' ? thisArg : null;\n            length -= customizer ? 1 : 0;\n        }\n        if (guard && isIterateeCall(args[1], args[2], guard)) {\n            customizer = length == 3 ? null : customizer;\n            length = 2;\n        }\n        var index = 0;\n        while (++index < length) {\n            var source = args[index];\n            if (source) {\n                assigner(object, source, customizer);\n            }\n        }\n        return object;\n    };\n}\nmodule.exports = createAssigner;",
    "var htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        '\\'': '&#39;',\n        '`': '&#96;'\n    };\nfunction escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n}\nmodule.exports = escapeHtmlChar;",
    "function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length, index = fromIndex + (fromRight ? 0 : -1);\n    while (fromRight ? index-- : ++index < length) {\n        var other = array[index];\n        if (other !== other) {\n            return index;\n        }\n    }\n    return -1;\n}\nmodule.exports = indexOfNaN;",
    "var objectProto = Object.prototype;\nvar hasOwnProperty = objectProto.hasOwnProperty;\nfunction initCloneArray(array) {\n    var length = array.length, result = new array.constructor(length);\n    if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n    }\n    return result;\n}\nmodule.exports = initCloneArray;",
    "var bufferClone = require('./bufferClone');\nvar boolTag = '[object Boolean]', dateTag = '[object Date]', numberTag = '[object Number]', regexpTag = '[object RegExp]', stringTag = '[object String]';\nvar arrayBufferTag = '[object ArrayBuffer]', float32Tag = '[object Float32Array]', float64Tag = '[object Float64Array]', int8Tag = '[object Int8Array]', int16Tag = '[object Int16Array]', int32Tag = '[object Int32Array]', uint8Tag = '[object Uint8Array]', uint8ClampedTag = '[object Uint8ClampedArray]', uint16Tag = '[object Uint16Array]', uint32Tag = '[object Uint32Array]';\nvar reFlags = /\\w*$/;\nfunction initCloneByTag(object, tag, isDeep) {\n    var Ctor = object.constructor;\n    switch (tag) {\n    case arrayBufferTag:\n        return bufferClone(object);\n    case boolTag:\n    case dateTag:\n        return new Ctor(+object);\n    case float32Tag:\n    case float64Tag:\n    case int8Tag:\n    case int16Tag:\n    case int32Tag:\n    case uint8Tag:\n    case uint8ClampedTag:\n    case uint16Tag:\n    case uint32Tag:\n        var buffer = object.buffer;\n        return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n    case numberTag:\n    case stringTag:\n        return new Ctor(object);\n    case regexpTag:\n        var result = new Ctor(object.source, reFlags.exec(object));\n        result.lastIndex = object.lastIndex;\n    }\n    return result;\n}\nmodule.exports = initCloneByTag;",
    "function initCloneObject(object) {\n    var Ctor = object.constructor;\n    if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n    }\n    return new Ctor();\n}\nmodule.exports = initCloneObject;",
    "var MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\nfunction isIndex(value, length) {\n    value = +value;\n    length = length == null ? MAX_SAFE_INTEGER : length;\n    return value > -1 && value % 1 == 0 && value < length;\n}\nmodule.exports = isIndex;",
    "var isIndex = require('./isIndex'), isLength = require('./isLength'), isObject = require('../lang/isObject');\nfunction isIterateeCall(value, index, object) {\n    if (!isObject(object)) {\n        return false;\n    }\n    var type = typeof index;\n    if (type == 'number') {\n        var length = object.length, prereq = isLength(length) && isIndex(index, length);\n    } else {\n        prereq = type == 'string' && index in object;\n    }\n    if (prereq) {\n        var other = object[index];\n        return value === value ? value === other : other !== other;\n    }\n    return false;\n}\nmodule.exports = isIterateeCall;",
    "var MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\nfunction isLength(value) {\n    return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\nmodule.exports = isLength;",
    "function isObjectLike(value) {\n    return value && typeof value == 'object' || false;\n}\nmodule.exports = isObjectLike;",
    "var objectTypes = {\n        'function': true,\n        'object': true\n    };\nvar freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\nvar freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\nvar freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\nvar freeWindow = objectTypes[typeof window] && window;\nvar root = freeGlobal || freeWindow !== (this && this.window) && freeWindow || this;\nmodule.exports = root;",
    "var baseForIn = require('./baseForIn'), isObjectLike = require('./isObjectLike');\nvar objectTag = '[object Object]';\nvar objectProto = Object.prototype;\nvar hasOwnProperty = objectProto.hasOwnProperty;\nvar objToString = objectProto.toString;\nfunction shimIsPlainObject(value) {\n    var Ctor;\n    if (!(isObjectLike(value) && objToString.call(value) == objectTag) || !hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor))) {\n        return false;\n    }\n    var result;\n    baseForIn(value, function (subValue, key) {\n        result = key;\n    });\n    return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n}\nmodule.exports = shimIsPlainObject;",
    "var isArguments = require('../lang/isArguments'), isArray = require('../lang/isArray'), isIndex = require('./isIndex'), isLength = require('./isLength'), keysIn = require('../object/keysIn'), support = require('../support');\nvar objectProto = Object.prototype;\nvar hasOwnProperty = objectProto.hasOwnProperty;\nfunction shimKeys(object) {\n    var props = keysIn(object), propsLength = props.length, length = propsLength && object.length;\n    var allowIndexes = length && isLength(length) && (isArray(object) || support.nonEnumArgs && isArguments(object));\n    var index = -1, result = [];\n    while (++index < propsLength) {\n        var key = props[index];\n        if (allowIndexes && isIndex(key, length) || hasOwnProperty.call(object, key)) {\n            result.push(key);\n        }\n    }\n    return result;\n}\nmodule.exports = shimKeys;",
    "var isObject = require('../lang/isObject');\nfunction toObject(value) {\n    return isObject(value) ? value : Object(value);\n}\nmodule.exports = toObject;",
    "var baseClone = require('../internal/baseClone'), bindCallback = require('../internal/bindCallback');\nfunction cloneDeep(value, customizer, thisArg) {\n    customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n    return baseClone(value, true, customizer);\n}\nmodule.exports = cloneDeep;",
    "var isLength = require('../internal/isLength'), isObjectLike = require('../internal/isObjectLike');\nvar undefined;\nvar argsTag = '[object Arguments]';\nvar objectProto = Object.prototype;\nvar objToString = objectProto.toString;\nfunction isArguments(value) {\n    var length = isObjectLike(value) ? value.length : undefined;\n    return isLength(length) && objToString.call(value) == argsTag || false;\n}\nmodule.exports = isArguments;",
    "var isLength = require('../internal/isLength'), isNative = require('./isNative'), isObjectLike = require('../internal/isObjectLike');\nvar arrayTag = '[object Array]';\nvar objectProto = Object.prototype;\nvar objToString = objectProto.toString;\nvar nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray;\nvar isArray = nativeIsArray || function (value) {\n        return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag || false;\n    };\nmodule.exports = isArray;",
    "var escapeRegExp = require('../string/escapeRegExp'), isObjectLike = require('../internal/isObjectLike');\nvar funcTag = '[object Function]';\nvar reHostCtor = /^\\[object .+?Constructor\\]$/;\nvar objectProto = Object.prototype;\nvar fnToString = Function.prototype.toString;\nvar objToString = objectProto.toString;\nvar reNative = RegExp('^' + escapeRegExp(objToString).replace(/toString|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\nfunction isNative(value) {\n    if (value == null) {\n        return false;\n    }\n    if (objToString.call(value) == funcTag) {\n        return reNative.test(fnToString.call(value));\n    }\n    return isObjectLike(value) && reHostCtor.test(value) || false;\n}\nmodule.exports = isNative;",
    "function isObject(value) {\n    var type = typeof value;\n    return type == 'function' || value && type == 'object' || false;\n}\nmodule.exports = isObject;",
    "var isNative = require('./isNative'), shimIsPlainObject = require('../internal/shimIsPlainObject');\nvar objectTag = '[object Object]';\nvar objectProto = Object.prototype;\nvar objToString = objectProto.toString;\nvar getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf;\nvar isPlainObject = !getPrototypeOf ? shimIsPlainObject : function (value) {\n        if (!(value && objToString.call(value) == objectTag)) {\n            return false;\n        }\n        var valueOf = value.valueOf, objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n        return objProto ? value == objProto || getPrototypeOf(value) == objProto : shimIsPlainObject(value);\n    };\nmodule.exports = isPlainObject;",
    "var isObjectLike = require('../internal/isObjectLike');\nvar stringTag = '[object String]';\nvar objectProto = Object.prototype;\nvar objToString = objectProto.toString;\nfunction isString(value) {\n    return typeof value == 'string' || isObjectLike(value) && objToString.call(value) == stringTag || false;\n}\nmodule.exports = isString;",
    "var isLength = require('../internal/isLength'), isObjectLike = require('../internal/isObjectLike');\nvar argsTag = '[object Arguments]', arrayTag = '[object Array]', boolTag = '[object Boolean]', dateTag = '[object Date]', errorTag = '[object Error]', funcTag = '[object Function]', mapTag = '[object Map]', numberTag = '[object Number]', objectTag = '[object Object]', regexpTag = '[object RegExp]', setTag = '[object Set]', stringTag = '[object String]', weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]', float32Tag = '[object Float32Array]', float64Tag = '[object Float64Array]', int8Tag = '[object Int8Array]', int16Tag = '[object Int16Array]', int32Tag = '[object Int32Array]', uint8Tag = '[object Uint8Array]', uint8ClampedTag = '[object Uint8ClampedArray]', uint16Tag = '[object Uint16Array]', uint32Tag = '[object Uint32Array]';\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\nvar objectProto = Object.prototype;\nvar objToString = objectProto.toString;\nfunction isTypedArray(value) {\n    return isObjectLike(value) && isLength(value.length) && typedArrayTags[objToString.call(value)] || false;\n}\nmodule.exports = isTypedArray;",
    "var arrayCopy = require('../internal/arrayCopy'), isLength = require('../internal/isLength'), values = require('../object/values');\nfunction toArray(value) {\n    var length = value ? value.length : 0;\n    if (!isLength(length)) {\n        return values(value);\n    }\n    if (!length) {\n        return [];\n    }\n    return arrayCopy(value);\n}\nmodule.exports = toArray;",
    "var baseCopy = require('../internal/baseCopy'), keysIn = require('../object/keysIn');\nfunction toPlainObject(value) {\n    return baseCopy(value, keysIn(value));\n}\nmodule.exports = toPlainObject;",
    "var baseAssign = require('../internal/baseAssign'), createAssigner = require('../internal/createAssigner');\nvar assign = createAssigner(baseAssign);\nmodule.exports = assign;",
    "var arrayCopy = require('../internal/arrayCopy'), assign = require('./assign'), assignDefaults = require('../internal/assignDefaults');\nvar undefined;\nfunction defaults(object) {\n    if (object == null) {\n        return object;\n    }\n    var args = arrayCopy(arguments);\n    args.push(assignDefaults);\n    return assign.apply(undefined, args);\n}\nmodule.exports = defaults;",
    "var isLength = require('../internal/isLength'), isNative = require('../lang/isNative'), isObject = require('../lang/isObject'), shimKeys = require('../internal/shimKeys');\nvar nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys;\nvar keys = !nativeKeys ? shimKeys : function (object) {\n        if (object) {\n            var Ctor = object.constructor, length = object.length;\n        }\n        if (typeof Ctor == 'function' && Ctor.prototype === object || typeof object != 'function' && (length && isLength(length))) {\n            return shimKeys(object);\n        }\n        return isObject(object) ? nativeKeys(object) : [];\n    };\nmodule.exports = keys;",
    "var isArguments = require('../lang/isArguments'), isArray = require('../lang/isArray'), isIndex = require('../internal/isIndex'), isLength = require('../internal/isLength'), isObject = require('../lang/isObject'), support = require('../support');\nvar objectProto = Object.prototype;\nvar hasOwnProperty = objectProto.hasOwnProperty;\nfunction keysIn(object) {\n    if (object == null) {\n        return [];\n    }\n    if (!isObject(object)) {\n        object = Object(object);\n    }\n    var length = object.length;\n    length = length && isLength(length) && (isArray(object) || support.nonEnumArgs && isArguments(object)) && length || 0;\n    var Ctor = object.constructor, index = -1, isProto = typeof Ctor == 'function' && Ctor.prototype === object, result = Array(length), skipIndexes = length > 0;\n    while (++index < length) {\n        result[index] = index + '';\n    }\n    for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) && !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n            result.push(key);\n        }\n    }\n    return result;\n}\nmodule.exports = keysIn;",
    "var baseMerge = require('../internal/baseMerge'), createAssigner = require('../internal/createAssigner');\nvar merge = createAssigner(baseMerge);\nmodule.exports = merge;",
    "var baseValues = require('../internal/baseValues'), keys = require('./keys');\nfunction values(object) {\n    return baseValues(object, keys(object));\n}\nmodule.exports = values;",
    "var baseToString = require('../internal/baseToString'), escapeHtmlChar = require('../internal/escapeHtmlChar');\nvar reUnescapedHtml = /[&<>\"'`]/g, reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\nfunction escape(string) {\n    string = baseToString(string);\n    return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;\n}\nmodule.exports = escape;",
    "var baseToString = require('../internal/baseToString');\nvar reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g, reHasRegExpChars = RegExp(reRegExpChars.source);\nfunction escapeRegExp(string) {\n    string = baseToString(string);\n    return string && reHasRegExpChars.test(string) ? string.replace(reRegExpChars, '\\\\$&') : string;\n}\nmodule.exports = escapeRegExp;",
    "var isNative = require('./lang/isNative'), root = require('./internal/root');\nvar reThis = /\\bthis\\b/;\nvar objectProto = Object.prototype;\nvar document = (document = root.window) && document.document;\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\nvar support = {};\n(function (x) {\n    support.funcDecomp = !isNative(root.WinRTError) && reThis.test(function () {\n        return this;\n    });\n    support.funcNames = typeof Function.name == 'string';\n    try {\n        support.dom = document.createDocumentFragment().nodeType === 11;\n    } catch (e) {\n        support.dom = false;\n    }\n    try {\n        support.nonEnumArgs = !propertyIsEnumerable.call(arguments, 1);\n    } catch (e) {\n        support.nonEnumArgs = true;\n    }\n}(0, 0));\nmodule.exports = support;",
    "function constant(value) {\n    return function () {\n        return value;\n    };\n}\nmodule.exports = constant;",
    "function identity(value) {\n    return value;\n}\nmodule.exports = identity;",
    "var buildCommandPatch = require('./api/command-patch'), buildCommand = require('./api/command'), Node = require('./api/node'), buildSelection = require('./api/selection'), buildSimpleCommand = require('./api/simple-command');\n'use strict';\nmodule.exports = function Api(scribe) {\n    this.CommandPatch = buildCommandPatch(scribe);\n    this.Command = buildCommand(scribe);\n    this.Node = Node;\n    this.Selection = buildSelection(scribe);\n    this.SimpleCommand = buildSimpleCommand(this, scribe);\n};",
    "'use strict';\nfunction firstDeepestChild(node) {\n    if (!node.hasChildNodes()) {\n        return node;\n    }\n    var treeWalker = document.createTreeWalker(node, NodeFilter.SHOW_ALL, null, false);\n    var previousNode = treeWalker.currentNode;\n    if (treeWalker.firstChild()) {\n        if (treeWalker.currentNode.nodeName === 'BR') {\n            return previousNode;\n        } else {\n            return firstDeepestChild(treeWalker.currentNode);\n        }\n    } else {\n        return treeWalker.currentNode;\n    }\n}\nmodule.exports = { firstDeepestChild: firstDeepestChild };",
    "'use strict';\nmodule.exports = function (scribe) {\n    function CommandPatch(commandName) {\n        this.commandName = commandName;\n    }\n    CommandPatch.prototype.execute = function (value) {\n        scribe.transactionManager.run(function () {\n            document.execCommand(this.commandName, false, value || null);\n        }.bind(this));\n    };\n    CommandPatch.prototype.queryState = function () {\n        return document.queryCommandState(this.commandName);\n    };\n    CommandPatch.prototype.queryEnabled = function () {\n        return document.queryCommandEnabled(this.commandName);\n    };\n    return CommandPatch;\n};",
    "'use strict';\nmodule.exports = function (scribe) {\n    function Command(commandName) {\n        this.commandName = commandName;\n        this.patch = scribe.commandPatches[this.commandName];\n    }\n    Command.prototype.execute = function (value) {\n        if (this.patch) {\n            this.patch.execute(value);\n        } else {\n            scribe.transactionManager.run(function () {\n                document.execCommand(this.commandName, false, value || null);\n            }.bind(this));\n        }\n    };\n    Command.prototype.queryState = function () {\n        if (this.patch) {\n            return this.patch.queryState();\n        } else {\n            return document.queryCommandState(this.commandName);\n        }\n    };\n    Command.prototype.queryEnabled = function () {\n        if (this.patch) {\n            return this.patch.queryEnabled();\n        } else {\n            return document.queryCommandEnabled(this.commandName);\n        }\n    };\n    return Command;\n};",
    "'use strict';\nfunction Node(node) {\n    this.node = node;\n}\nNode.prototype.getAncestor = function (rootElement, nodeFilter) {\n    var isTopContainerElement = function (element) {\n        return rootElement === element;\n    };\n    if (isTopContainerElement(this.node)) {\n        return;\n    }\n    var currentNode = this.node.parentNode;\n    while (currentNode && !isTopContainerElement(currentNode)) {\n        if (nodeFilter(currentNode)) {\n            return currentNode;\n        }\n        currentNode = currentNode.parentNode;\n    }\n};\nNode.prototype.nextAll = function () {\n    var all = [];\n    var el = this.node.nextSibling;\n    while (el) {\n        all.push(el);\n        el = el.nextSibling;\n    }\n    return all;\n};\nmodule.exports = Node;",
    "var elementHelper = require('../element');\n'use strict';\nmodule.exports = function (scribe) {\n    function Selection() {\n        var rootDoc = document;\n        var currentElement = scribe.el.parentNode;\n        while (currentElement && currentElement.nodeType !== Node.DOCUMENT_FRAGMENT_NODE && currentElement.nodeType !== Node.DOCUMENT_NODE) {\n            currentElement = currentElement.parentNode;\n        }\n        if (currentElement && currentElement.nodeType === Node.DOCUMENT_FRAGMENT_NODE && currentElement.getSelection) {\n            rootDoc = currentElement;\n        }\n        this.selection = rootDoc.getSelection();\n        if (this.selection.rangeCount && this.selection.anchorNode) {\n            this.range = document.createRange();\n            var reverseRange = document.createRange();\n            this.range.setStart(this.selection.anchorNode, this.selection.anchorOffset);\n            reverseRange.setStart(this.selection.focusNode, this.selection.focusOffset);\n            if (this.range.compareBoundaryPoints(Range.START_TO_START, reverseRange) <= 0) {\n                this.range.setEnd(this.selection.focusNode, this.selection.focusOffset);\n            } else {\n                this.range = reverseRange;\n                this.range.setEnd(this.selection.anchorNode, this.selection.anchorOffset);\n            }\n        }\n    }\n    Selection.prototype.getContaining = function (nodeFilter) {\n        var range = this.range;\n        if (!range) {\n            return;\n        }\n        var node = new scribe.api.Node(this.range.commonAncestorContainer);\n        var isTopContainerElement = node.node && scribe.el === node.node;\n        return !isTopContainerElement && nodeFilter(node.node) ? node.node : node.getAncestor(scribe.el, nodeFilter);\n    };\n    Selection.prototype.placeMarkers = function () {\n        var range = this.range;\n        if (!range) {\n            return;\n        }\n        if (!scribe.el.offsetParent) {\n            return;\n        }\n        var scribeNodeRange = document.createRange();\n        scribeNodeRange.selectNodeContents(scribe.el);\n        var selectionStartWithinScribeElementStart = this.range.compareBoundaryPoints(Range.START_TO_START, scribeNodeRange) >= 0;\n        var selectionEndWithinScribeElementEnd = this.range.compareBoundaryPoints(Range.END_TO_END, scribeNodeRange) <= 0;\n        if (selectionStartWithinScribeElementStart && selectionEndWithinScribeElementEnd) {\n            var startMarker = document.createElement('em');\n            startMarker.classList.add('scribe-marker');\n            var endMarker = document.createElement('em');\n            endMarker.classList.add('scribe-marker');\n            var rangeEnd = this.range.cloneRange();\n            rangeEnd.collapse(false);\n            rangeEnd.insertNode(endMarker);\n            if (endMarker.nextSibling && endMarker.nextSibling.nodeType === Node.TEXT_NODE && endMarker.nextSibling.data === '') {\n                endMarker.parentNode.removeChild(endMarker.nextSibling);\n            }\n            if (endMarker.previousSibling && endMarker.previousSibling.nodeType === Node.TEXT_NODE && endMarker.previousSibling.data === '') {\n                endMarker.parentNode.removeChild(endMarker.previousSibling);\n            }\n            if (!this.range.collapsed) {\n                var rangeStart = this.range.cloneRange();\n                rangeStart.collapse(true);\n                rangeStart.insertNode(startMarker);\n                if (startMarker.nextSibling && startMarker.nextSibling.nodeType === Node.TEXT_NODE && startMarker.nextSibling.data === '') {\n                    startMarker.parentNode.removeChild(startMarker.nextSibling);\n                }\n                if (startMarker.previousSibling && startMarker.previousSibling.nodeType === Node.TEXT_NODE && startMarker.previousSibling.data === '') {\n                    startMarker.parentNode.removeChild(startMarker.previousSibling);\n                }\n            }\n            this.selection.removeAllRanges();\n            this.selection.addRange(this.range);\n        }\n    };\n    Selection.prototype.getMarkers = function () {\n        return scribe.el.querySelectorAll('em.scribe-marker');\n    };\n    Selection.prototype.removeMarkers = function () {\n        var markers = this.getMarkers();\n        Array.prototype.forEach.call(markers, function (marker) {\n            marker.parentNode.removeChild(marker);\n        });\n    };\n    Selection.prototype.selectMarkers = function (keepMarkers) {\n        var markers = this.getMarkers();\n        if (!markers.length) {\n            return;\n        }\n        var newRange = document.createRange();\n        newRange.setStartBefore(markers[0]);\n        if (markers.length >= 2) {\n            newRange.setEndAfter(markers[1]);\n        } else {\n            newRange.setEndAfter(markers[0]);\n        }\n        if (!keepMarkers) {\n            this.removeMarkers();\n        }\n        this.selection.removeAllRanges();\n        this.selection.addRange(newRange);\n    };\n    Selection.prototype.isCaretOnNewLine = function () {\n        function isEmptyInlineElement(node) {\n            var treeWalker = document.createTreeWalker(node, NodeFilter.SHOW_ELEMENT, null, false);\n            var currentNode = treeWalker.root;\n            while (currentNode) {\n                var numberOfChildren = currentNode.childNodes.length;\n                if (numberOfChildren > 1 || numberOfChildren === 1 && currentNode.textContent.trim() !== '')\n                    return false;\n                if (numberOfChildren === 0) {\n                    return currentNode.textContent.trim() === '';\n                }\n                currentNode = treeWalker.nextNode();\n            }\n            ;\n        }\n        ;\n        var containerPElement = this.getContaining(function (node) {\n                return node.nodeName === 'P';\n            });\n        if (containerPElement) {\n            return isEmptyInlineElement(containerPElement);\n        } else {\n            return false;\n        }\n    };\n    return Selection;\n};",
    "'use strict';\nmodule.exports = function (api, scribe) {\n    function SimpleCommand(commandName, nodeName) {\n        scribe.api.Command.call(this, commandName);\n        this._nodeName = nodeName;\n    }\n    SimpleCommand.prototype = Object.create(api.Command.prototype);\n    SimpleCommand.prototype.constructor = SimpleCommand;\n    SimpleCommand.prototype.queryState = function () {\n        var selection = new scribe.api.Selection();\n        return scribe.api.Command.prototype.queryState.call(this) && !!selection.getContaining(function (node) {\n            return node.nodeName === this._nodeName;\n        }.bind(this));\n    };\n    return SimpleCommand;\n};",
    "var defaults = require('lodash-amd/modern/object/defaults');\nvar blockModePlugins = [\n        'setRootPElement',\n        'enforcePElements',\n        'ensureSelectableContainers'\n    ], inlineModePlugins = ['inlineElementsMode'], defaultOptions = {\n        allowBlockElements: true,\n        debug: false,\n        undo: {\n            manager: false,\n            enabled: true,\n            limit: 100,\n            interval: 250\n        },\n        defaultCommandPatches: [\n            'bold',\n            'indent',\n            'insertHTML',\n            'insertList',\n            'outdent',\n            'createLink'\n        ],\n        defaultPlugins: blockModePlugins.concat(inlineModePlugins),\n        defaultFormatters: [\n            'escapeHtmlCharactersFormatter',\n            'replaceNbspCharsFormatter'\n        ]\n    };\nfunction checkOptions(userSuppliedOptions) {\n    var options = userSuppliedOptions || {};\n    if (options.defaultPlugins) {\n        options.defaultPlugins = options.defaultPlugins.filter(filterByPluginExists(defaultOptions.defaultPlugins));\n    }\n    if (options.defaultFormatters) {\n        options.defaultFormatters = options.defaultFormatters.filter(filterByPluginExists(defaultOptions.defaultFormatters));\n    }\n    return Object.freeze(defaults(options, defaultOptions));\n}\nfunction sortByPlugin(priorityPlugin) {\n    return function (pluginCurrent, pluginNext) {\n        if (pluginCurrent === priorityPlugin) {\n            return -1;\n        } else if (pluginNext === priorityPlugin) {\n            return 1;\n        }\n        return 0;\n    };\n}\nfunction filterByBlockLevelMode(isBlockLevelMode) {\n    return function (plugin) {\n        return (isBlockLevelMode ? blockModePlugins : inlineModePlugins).indexOf(plugin) !== -1;\n    };\n}\nfunction filterByPluginExists(pluginList) {\n    return function (plugin) {\n        return pluginList.indexOf(plugin) !== -1;\n    };\n}\nmodule.exports = {\n    defaultOptions: defaultOptions,\n    checkOptions: checkOptions,\n    sortByPlugin: sortByPlugin,\n    filterByBlockLevelMode: filterByBlockLevelMode,\n    filterByPluginExists: filterByPluginExists\n};",
    "var flatten = require('lodash-amd/modern/array/flatten'), toArray = require('lodash-amd/modern/lang/toArray'), elementHelpers = require('./element'), nodeHelpers = require('./node');\nfunction observeDomChanges(el, callback) {\n    function includeRealMutations(mutations) {\n        var allChangedNodes = flatten(mutations.map(function (mutation) {\n                var added = toArray(mutation.addedNodes);\n                var removed = toArray(mutation.removedNodes);\n                return added.concat(removed);\n            }));\n        var realChangedNodes = allChangedNodes.filter(function (n) {\n                return !nodeHelpers.isEmptyTextNode(n);\n            }).filter(function (n) {\n                return !elementHelpers.isSelectionMarkerNode(n);\n            });\n        return realChangedNodes.length > 0;\n    }\n    var MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;\n    var runningPostMutation = false;\n    var observer = new MutationObserver(function (mutations) {\n            if (!runningPostMutation && includeRealMutations(mutations)) {\n                runningPostMutation = true;\n                try {\n                    callback();\n                } catch (e) {\n                    throw e;\n                } finally {\n                    setTimeout(function () {\n                        runningPostMutation = false;\n                    }, 0);\n                }\n            }\n        });\n    observer.observe(el, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nmodule.exports = observeDomChanges;",
    "var contains = require('lodash-amd/modern/collection/contains');\n'use strict';\nvar blockElementNames = [\n        'ADDRESS',\n        'ARTICLE',\n        'ASIDE',\n        'AUDIO',\n        'BLOCKQUOTE',\n        'CANVAS',\n        'DD',\n        'DIV',\n        'FIELDSET',\n        'FIGCAPTION',\n        'FIGURE',\n        'FOOTER',\n        'FORM',\n        'H1',\n        'H2',\n        'H3',\n        'H4',\n        'H5',\n        'H6',\n        'HEADER',\n        'HGROUP',\n        'HR',\n        'LI',\n        'NOSCRIPT',\n        'OL',\n        'OUTPUT',\n        'P',\n        'PRE',\n        'SECTION',\n        'TABLE',\n        'TD',\n        'TH',\n        'TFOOT',\n        'UL',\n        'VIDEO'\n    ];\nfunction isBlockElement(node) {\n    return contains(blockElementNames, node.nodeName);\n}\nfunction isSelectionMarkerNode(node) {\n    return node.nodeType === Node.ELEMENT_NODE && node.className === 'scribe-marker';\n}\nfunction isCaretPositionNode(node) {\n    return node.nodeType === Node.ELEMENT_NODE && node.className === 'caret-position';\n}\nfunction unwrap(node, childNode) {\n    while (childNode.childNodes.length > 0) {\n        node.insertBefore(childNode.childNodes[0], childNode);\n    }\n    node.removeChild(childNode);\n}\nmodule.exports = {\n    isBlockElement: isBlockElement,\n    isSelectionMarkerNode: isSelectionMarkerNode,\n    isCaretPositionNode: isCaretPositionNode,\n    unwrap: unwrap\n};",
    "var pull = require('lodash-amd/modern/array/pull'), Immutable = require('immutable/dist/immutable');\n'use strict';\nfunction EventEmitter() {\n    this._listeners = {};\n}\nEventEmitter.prototype.on = function (eventName, fn) {\n    var listeners = this._listeners[eventName] || Immutable.Set();\n    this._listeners[eventName] = listeners.add(fn);\n};\nEventEmitter.prototype.off = function (eventName, fn) {\n    var listeners = this._listeners[eventName] || Immutable.Set();\n    if (fn) {\n        this._listeners[eventName] = listeners.delete(fn);\n    } else {\n        this._listeners[eventName] = listeners.clear();\n    }\n};\nEventEmitter.prototype.trigger = function (eventName, args) {\n    var events = eventName.split(':');\n    while (!!events.length) {\n        var currentEvent = events.join(':');\n        var listeners = this._listeners[currentEvent] || Immutable.Set();\n        listeners.forEach(function (listener) {\n            listener.apply(null, args);\n        });\n        events.splice(events.length - 1, 1);\n    }\n};\nmodule.exports = EventEmitter;",
    "'use strict';\nfunction isEmptyTextNode(node) {\n    return node.nodeType === Node.TEXT_NODE && node.textContent === '';\n}\nfunction insertAfter(newNode, referenceNode) {\n    return referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n}\nfunction removeNode(node) {\n    return node.parentNode.removeChild(node);\n}\nmodule.exports = {\n    isEmptyTextNode: isEmptyTextNode,\n    insertAfter: insertAfter,\n    removeNode: removeNode\n};",
    "var indent = require('./commands/indent'), insertList = require('./commands/insert-list'), outdent = require('./commands/outdent'), redo = require('./commands/redo'), subscript = require('./commands/subscript'), superscript = require('./commands/superscript'), undo = require('./commands/undo');\n'use strict';\nmodule.exports = {\n    indent: indent,\n    insertList: insertList,\n    outdent: outdent,\n    redo: redo,\n    subscript: subscript,\n    superscript: superscript,\n    undo: undo\n};",
    "'use strict';\nmodule.exports = function () {\n    return function (scribe) {\n        var indentCommand = new scribe.api.Command('indent');\n        indentCommand.queryEnabled = function () {\n            var selection = new scribe.api.Selection();\n            var listElement = selection.getContaining(function (element) {\n                    return element.nodeName === 'UL' || element.nodeName === 'OL';\n                });\n            return scribe.api.Command.prototype.queryEnabled.call(this) && scribe.allowsBlockElements() && !listElement;\n        };\n        scribe.commands.indent = indentCommand;\n    };\n};",
    "'use strict';\nmodule.exports = function () {\n    return function (scribe) {\n        var InsertListCommand = function (commandName) {\n            scribe.api.Command.call(this, commandName);\n        };\n        InsertListCommand.prototype = Object.create(scribe.api.Command.prototype);\n        InsertListCommand.prototype.constructor = InsertListCommand;\n        InsertListCommand.prototype.execute = function (value) {\n            function splitList(listItemElements) {\n                if (listItemElements.length > 0) {\n                    var newListNode = document.createElement(listNode.nodeName);\n                    listItemElements.forEach(function (listItemElement) {\n                        newListNode.appendChild(listItemElement);\n                    });\n                    listNode.parentNode.insertBefore(newListNode, listNode.nextElementSibling);\n                }\n            }\n            if (this.queryState()) {\n                var selection = new scribe.api.Selection();\n                var range = selection.range;\n                var listNode = selection.getContaining(function (node) {\n                        return node.nodeName === 'OL' || node.nodeName === 'UL';\n                    });\n                var listItemElement = selection.getContaining(function (node) {\n                        return node.nodeName === 'LI';\n                    });\n                scribe.transactionManager.run(function () {\n                    if (listItemElement) {\n                        var nextListItemElements = new scribe.api.Node(listItemElement).nextAll();\n                        splitList(nextListItemElements);\n                        selection.placeMarkers();\n                        var pNode = document.createElement('p');\n                        pNode.innerHTML = listItemElement.innerHTML;\n                        listNode.parentNode.insertBefore(pNode, listNode.nextElementSibling);\n                        listItemElement.parentNode.removeChild(listItemElement);\n                    } else {\n                        var selectedListItemElements = Array.prototype.map.call(listNode.querySelectorAll('li'), function (listItemElement) {\n                                return range.intersectsNode(listItemElement) && listItemElement;\n                            }).filter(function (listItemElement) {\n                                return listItemElement;\n                            });\n                        var lastSelectedListItemElement = selectedListItemElements.slice(-1)[0];\n                        var listItemElementsAfterSelection = new scribe.api.Node(lastSelectedListItemElement).nextAll();\n                        splitList(listItemElementsAfterSelection);\n                        selection.placeMarkers();\n                        var documentFragment = document.createDocumentFragment();\n                        selectedListItemElements.forEach(function (listItemElement) {\n                            var pElement = document.createElement('p');\n                            pElement.innerHTML = listItemElement.innerHTML;\n                            documentFragment.appendChild(pElement);\n                        });\n                        listNode.parentNode.insertBefore(documentFragment, listNode.nextElementSibling);\n                        selectedListItemElements.forEach(function (listItemElement) {\n                            listItemElement.parentNode.removeChild(listItemElement);\n                        });\n                    }\n                    if (listNode.childNodes.length === 0) {\n                        listNode.parentNode.removeChild(listNode);\n                    }\n                    selection.selectMarkers();\n                }.bind(this));\n            } else {\n                scribe.api.Command.prototype.execute.call(this, value);\n            }\n        };\n        InsertListCommand.prototype.queryEnabled = function () {\n            return scribe.api.Command.prototype.queryEnabled.call(this) && scribe.allowsBlockElements();\n        };\n        scribe.commands.insertOrderedList = new InsertListCommand('insertOrderedList');\n        scribe.commands.insertUnorderedList = new InsertListCommand('insertUnorderedList');\n    };\n};",
    "'use strict';\nmodule.exports = function () {\n    return function (scribe) {\n        var outdentCommand = new scribe.api.Command('outdent');\n        outdentCommand.queryEnabled = function () {\n            var selection = new scribe.api.Selection();\n            var listElement = selection.getContaining(function (element) {\n                    return element.nodeName === 'UL' || element.nodeName === 'OL';\n                });\n            return scribe.api.Command.prototype.queryEnabled.call(this) && scribe.allowsBlockElements() && !listElement;\n        };\n        scribe.commands.outdent = outdentCommand;\n    };\n};",
    "'use strict';\nmodule.exports = function () {\n    return function (scribe) {\n        var redoCommand = new scribe.api.Command('redo');\n        redoCommand.execute = function () {\n            scribe.undoManager.redo();\n        };\n        redoCommand.queryEnabled = function () {\n            return scribe.undoManager.position > 0;\n        };\n        scribe.commands.redo = redoCommand;\n        if (scribe.options.undo.enabled) {\n            scribe.el.addEventListener('keydown', function (event) {\n                if (event.shiftKey && (event.metaKey || event.ctrlKey) && event.keyCode === 90) {\n                    event.preventDefault();\n                    redoCommand.execute();\n                }\n            });\n        }\n    };\n};",
    "'use strict';\nmodule.exports = function () {\n    return function (scribe) {\n        var subscriptCommand = new scribe.api.Command('subscript');\n        scribe.commands.subscript = subscriptCommand;\n    };\n};",
    "'use strict';\nmodule.exports = function () {\n    return function (scribe) {\n        var superscriptCommand = new scribe.api.Command('superscript');\n        scribe.commands.superscript = superscriptCommand;\n    };\n};",
    "'use strict';\nmodule.exports = function () {\n    return function (scribe) {\n        var undoCommand = new scribe.api.Command('undo');\n        undoCommand.execute = function () {\n            scribe.undoManager.undo();\n        };\n        undoCommand.queryEnabled = function () {\n            return scribe.undoManager.position < scribe.undoManager.length;\n        };\n        scribe.commands.undo = undoCommand;\n        if (scribe.options.undo.enabled) {\n            scribe.el.addEventListener('keydown', function (event) {\n                if (!event.shiftKey && (event.metaKey || event.ctrlKey) && event.keyCode === 90) {\n                    event.preventDefault();\n                    undoCommand.execute();\n                }\n            });\n        }\n    };\n};",
    "var contains = require('lodash-amd/modern/collection/contains'), observeDomChanges = require('../../dom-observer'), children = require('../../api/children');\n'use strict';\nmodule.exports = function () {\n    return function (scribe) {\n        scribe.el.addEventListener('focus', function placeCaretOnFocus() {\n            var selection = new scribe.api.Selection();\n            if (selection.range) {\n                var isFirefoxBug = scribe.allowsBlockElements() && selection.range.startContainer === scribe.el;\n                if (isFirefoxBug) {\n                    var focusElement = children.firstDeepestChild(scribe.el);\n                    var range = selection.range;\n                    range.setStart(focusElement, 0);\n                    range.setEnd(focusElement, 0);\n                    selection.selection.removeAllRanges();\n                    selection.selection.addRange(range);\n                }\n            }\n        }.bind(scribe));\n        var applyFormatters = function () {\n                if (!scribe._skipFormatters) {\n                    var selection = new scribe.api.Selection();\n                    var isEditorActive = selection.range;\n                    var runFormatters = function () {\n                            if (isEditorActive) {\n                                selection.placeMarkers();\n                            }\n                            scribe.setHTML(scribe._htmlFormatterFactory.format(scribe.getHTML()));\n                            selection.selectMarkers();\n                        }.bind(scribe);\n                    scribe.transactionManager.run(runFormatters);\n                }\n                delete scribe._skipFormatters;\n            }.bind(scribe);\n        observeDomChanges(scribe.el, applyFormatters);\n        if (scribe.allowsBlockElements()) {\n            scribe.el.addEventListener('keydown', function (event) {\n                if (event.keyCode === 13) {\n                    var selection = new scribe.api.Selection();\n                    var range = selection.range;\n                    var headingNode = selection.getContaining(function (node) {\n                            return /^(H[1-6])$/.test(node.nodeName);\n                        });\n                    if (headingNode && range.collapsed) {\n                        var contentToEndRange = range.cloneRange();\n                        contentToEndRange.setEndAfter(headingNode, 0);\n                        var contentToEndFragment = contentToEndRange.cloneContents();\n                        if (contentToEndFragment.firstChild.textContent === '') {\n                            event.preventDefault();\n                            scribe.transactionManager.run(function () {\n                                var pNode = document.createElement('p');\n                                var brNode = document.createElement('br');\n                                pNode.appendChild(brNode);\n                                headingNode.parentNode.insertBefore(pNode, headingNode.nextElementSibling);\n                                range.setStart(pNode, 0);\n                                range.setEnd(pNode, 0);\n                                selection.selection.removeAllRanges();\n                                selection.selection.addRange(range);\n                            });\n                        }\n                    }\n                }\n            });\n        }\n        if (scribe.allowsBlockElements()) {\n            scribe.el.addEventListener('keydown', function (event) {\n                if (event.keyCode === 13 || event.keyCode === 8) {\n                    var selection = new scribe.api.Selection();\n                    var range = selection.range;\n                    if (range.collapsed) {\n                        var containerLIElement = selection.getContaining(function (node) {\n                                return node.nodeName === 'LI';\n                            });\n                        if (containerLIElement && containerLIElement.textContent.trim() === '') {\n                            event.preventDefault();\n                            var listNode = selection.getContaining(function (node) {\n                                    return node.nodeName === 'UL' || node.nodeName === 'OL';\n                                });\n                            var command = scribe.getCommand(listNode.nodeName === 'OL' ? 'insertOrderedList' : 'insertUnorderedList');\n                            command.execute();\n                        }\n                    }\n                }\n            });\n        }\n        scribe.el.addEventListener('paste', function handlePaste(event) {\n            if (event.clipboardData) {\n                event.preventDefault();\n                if (contains(event.clipboardData.types, 'text/html')) {\n                    scribe.insertHTML(event.clipboardData.getData('text/html'));\n                } else {\n                    scribe.insertPlainText(event.clipboardData.getData('text/plain'));\n                }\n            } else {\n                var selection = new scribe.api.Selection();\n                selection.placeMarkers();\n                var bin = document.createElement('div');\n                document.body.appendChild(bin);\n                bin.setAttribute('contenteditable', true);\n                bin.focus();\n                setTimeout(function () {\n                    var data = bin.innerHTML;\n                    bin.parentNode.removeChild(bin);\n                    selection.selectMarkers();\n                    scribe.el.focus();\n                    scribe.insertHTML(data);\n                }, 1);\n            }\n        });\n    };\n};",
    "var replaceNbspCharsFormatter = require('./formatters/html/replace-nbsp-chars'), escapeHtmlCharactersFormatter = require('./formatters/plain-text/escape-html-characters');\n'use strict';\nmodule.exports = {\n    replaceNbspCharsFormatter: replaceNbspCharsFormatter,\n    escapeHtmlCharactersFormatter: escapeHtmlCharactersFormatter\n};",
    "var last = require('lodash-amd/modern/array/last');\n'use strict';\nfunction wrapChildNodes(scribe, parentNode) {\n    var groups = Array.prototype.reduce.call(parentNode.childNodes, function (accumulator, binChildNode) {\n            var group = last(accumulator);\n            if (!group) {\n                startNewGroup();\n            } else {\n                var isBlockGroup = scribe.element.isBlockElement(group[0]);\n                if (isBlockGroup === scribe.element.isBlockElement(binChildNode)) {\n                    group.push(binChildNode);\n                } else {\n                    startNewGroup();\n                }\n            }\n            return accumulator;\n            function startNewGroup() {\n                var newGroup = [binChildNode];\n                accumulator.push(newGroup);\n            }\n        }, []);\n    var consecutiveInlineElementsAndTextNodes = groups.filter(function (group) {\n            var isBlockGroup = scribe.element.isBlockElement(group[0]);\n            return !isBlockGroup;\n        });\n    consecutiveInlineElementsAndTextNodes.forEach(function (nodes) {\n        var pElement = document.createElement('p');\n        nodes[0].parentNode.insertBefore(pElement, nodes[0]);\n        nodes.forEach(function (node) {\n            pElement.appendChild(node);\n        });\n    });\n    parentNode._isWrapped = true;\n}\nfunction traverse(scribe, parentNode) {\n    var treeWalker = document.createTreeWalker(parentNode, NodeFilter.SHOW_ELEMENT, null, false);\n    var node = treeWalker.firstChild();\n    while (node) {\n        if (node.nodeName === 'BLOCKQUOTE' && !node._isWrapped) {\n            wrapChildNodes(scribe, node);\n            traverse(scribe, parentNode);\n            break;\n        }\n        node = treeWalker.nextSibling();\n    }\n}\nmodule.exports = function () {\n    return function (scribe) {\n        scribe.registerHTMLFormatter('normalize', function (html) {\n            var bin = document.createElement('div');\n            bin.innerHTML = html;\n            wrapChildNodes(scribe, bin);\n            traverse(scribe, bin);\n            return bin.innerHTML;\n        });\n    };\n};",
    "var element = require('../../../../element'), contains = require('lodash-amd/modern/collection/contains');\n'use strict';\nvar html5VoidElements = [\n        'AREA',\n        'BASE',\n        'BR',\n        'COL',\n        'COMMAND',\n        'EMBED',\n        'HR',\n        'IMG',\n        'INPUT',\n        'KEYGEN',\n        'LINK',\n        'META',\n        'PARAM',\n        'SOURCE',\n        'TRACK',\n        'WBR'\n    ];\nfunction parentHasNoTextContent(element, node) {\n    if (element.isCaretPositionNode(node)) {\n        return true;\n    } else {\n        return node.parentNode.textContent.trim() === '';\n    }\n}\nfunction traverse(element, parentNode) {\n    var node = parentNode.firstElementChild;\n    function isEmpty(node) {\n        if (node.children.length === 0 && element.isBlockElement(node) || node.children.length === 1 && element.isSelectionMarkerNode(node.children[0])) {\n            return true;\n        }\n        if (!element.isBlockElement(node) && node.children.length === 0) {\n            return parentHasNoTextContent(element, node);\n        }\n        return false;\n    }\n    while (node) {\n        if (!element.isSelectionMarkerNode(node)) {\n            if (isEmpty(node) && node.textContent.trim() === '' && !contains(html5VoidElements, node.nodeName)) {\n                node.appendChild(document.createElement('br'));\n            } else if (node.children.length > 0) {\n                traverse(element, node);\n            }\n        }\n        node = node.nextElementSibling;\n    }\n}\nmodule.exports = function () {\n    return function (scribe) {\n        scribe.registerHTMLFormatter('normalize', function (html) {\n            var bin = document.createElement('div');\n            bin.innerHTML = html;\n            traverse(scribe.element, bin);\n            return bin.innerHTML;\n        });\n    };\n};",
    "'use strict';\nmodule.exports = function () {\n    return function (scribe) {\n        var nbspCharRegExp = /(\\s|&nbsp;)+/g;\n        scribe.registerHTMLFormatter('export', function (html) {\n            return html.replace(nbspCharRegExp, ' ');\n        });\n    };\n};",
    "var escape = require('lodash-amd/modern/string/escape');\n'use strict';\nmodule.exports = function () {\n    return function (scribe) {\n        scribe.registerPlainTextFormatter(escape);\n    };\n};",
    "'use strict';\nfunction hasContent(rootNode) {\n    var treeWalker = document.createTreeWalker(rootNode, NodeFilter.SHOW_ALL, null, false);\n    while (treeWalker.nextNode()) {\n        if (treeWalker.currentNode) {\n            if (~['br'].indexOf(treeWalker.currentNode.nodeName.toLowerCase()) || treeWalker.currentNode.length > 0) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nmodule.exports = function () {\n    return function (scribe) {\n        scribe.el.addEventListener('keydown', function (event) {\n            if (event.keyCode === 13) {\n                var selection = new scribe.api.Selection();\n                var range = selection.range;\n                var blockNode = selection.getContaining(function (node) {\n                        return node.nodeName === 'LI' || /^(H[1-6])$/.test(node.nodeName);\n                    });\n                if (!blockNode) {\n                    event.preventDefault();\n                    scribe.transactionManager.run(function () {\n                        if (scribe.el.lastChild.nodeName === 'BR') {\n                            scribe.el.removeChild(scribe.el.lastChild);\n                        }\n                        var brNode = document.createElement('br');\n                        range.insertNode(brNode);\n                        range.collapse(false);\n                        var contentToEndRange = range.cloneRange();\n                        contentToEndRange.setEndAfter(scribe.el.lastChild, 0);\n                        var contentToEndFragment = contentToEndRange.cloneContents();\n                        if (!hasContent(contentToEndFragment)) {\n                            var bogusBrNode = document.createElement('br');\n                            range.insertNode(bogusBrNode);\n                        }\n                        var newRange = range.cloneRange();\n                        newRange.setStartAfter(brNode, 0);\n                        newRange.setEndAfter(brNode, 0);\n                        selection.selection.removeAllRanges();\n                        selection.selection.addRange(newRange);\n                    });\n                }\n            }\n        }.bind(this));\n        if (scribe.getHTML().trim() === '') {\n            scribe.setContent('');\n        }\n    };\n};",
    "var boldCommand = require('./patches/commands/bold'), indentCommand = require('./patches/commands/indent'), insertHTMLCommand = require('./patches/commands/insert-html'), insertListCommands = require('./patches/commands/insert-list'), outdentCommand = require('./patches/commands/outdent'), createLinkCommand = require('./patches/commands/create-link'), events = require('./patches/events');\n'use strict';\nmodule.exports = {\n    commands: {\n        bold: boldCommand,\n        indent: indentCommand,\n        insertHTML: insertHTMLCommand,\n        insertList: insertListCommands,\n        outdent: outdentCommand,\n        createLink: createLinkCommand\n    },\n    events: events\n};",
    "'use strict';\nmodule.exports = function () {\n    return function (scribe) {\n        var boldCommand = new scribe.api.CommandPatch('bold');\n        boldCommand.queryEnabled = function () {\n            var selection = new scribe.api.Selection();\n            var headingNode = selection.getContaining(function (node) {\n                    return /^(H[1-6])$/.test(node.nodeName);\n                });\n            return scribe.api.CommandPatch.prototype.queryEnabled.apply(this, arguments) && !headingNode;\n        };\n        scribe.commandPatches.bold = boldCommand;\n    };\n};",
    "'use strict';\nmodule.exports = function () {\n    return function (scribe) {\n        var createLinkCommand = new scribe.api.CommandPatch('createLink');\n        scribe.commandPatches.createLink = createLinkCommand;\n        createLinkCommand.execute = function (value) {\n            var selection = new scribe.api.Selection();\n            if (selection.range.collapsed) {\n                var aElement = document.createElement('a');\n                aElement.setAttribute('href', value);\n                aElement.textContent = value;\n                selection.range.insertNode(aElement);\n                var newRange = document.createRange();\n                newRange.setStartBefore(aElement);\n                newRange.setEndAfter(aElement);\n                selection.selection.removeAllRanges();\n                selection.selection.addRange(newRange);\n            } else {\n                scribe.api.CommandPatch.prototype.execute.call(this, value);\n            }\n        };\n    };\n};",
    "'use strict';\nvar INVISIBLE_CHAR = '\\ufeff';\nmodule.exports = function () {\n    return function (scribe) {\n        var indentCommand = new scribe.api.CommandPatch('indent');\n        indentCommand.execute = function (value) {\n            scribe.transactionManager.run(function () {\n                var selection = new scribe.api.Selection();\n                var range = selection.range;\n                var isCaretOnNewLine = range.commonAncestorContainer.nodeName === 'P' && range.commonAncestorContainer.innerHTML === '<br>';\n                if (isCaretOnNewLine) {\n                    var textNode = document.createTextNode(INVISIBLE_CHAR);\n                    range.insertNode(textNode);\n                    range.setStart(textNode, 0);\n                    range.setEnd(textNode, 0);\n                    selection.selection.removeAllRanges();\n                    selection.selection.addRange(range);\n                }\n                scribe.api.CommandPatch.prototype.execute.call(this, value);\n                selection = new scribe.api.Selection();\n                var blockquoteNode = selection.getContaining(function (node) {\n                        return node.nodeName === 'BLOCKQUOTE';\n                    });\n                if (blockquoteNode) {\n                    blockquoteNode.removeAttribute('style');\n                }\n            }.bind(this));\n        };\n        scribe.commandPatches.indent = indentCommand;\n    };\n};",
    "'use strict';\nmodule.exports = function () {\n    return function (scribe) {\n        var insertHTMLCommandPatch = new scribe.api.CommandPatch('insertHTML');\n        var element = scribe.element;\n        insertHTMLCommandPatch.execute = function (value) {\n            scribe.transactionManager.run(function () {\n                scribe.api.CommandPatch.prototype.execute.call(this, value);\n                removeChromeArtifacts(scribe.el);\n                function removeChromeArtifacts(parentElement) {\n                    var childElement = parentElement.firstElementChild;\n                    while (childElement) {\n                        var childStyle = window.getComputedStyle(childElement);\n                        if ((childStyle.display === 'inline' || childElement.nodeName === 'SPAN') && window.getComputedStyle(parentElement)['line-height'] === childStyle['line-height']) {\n                            childElement.style.lineHeight = null;\n                        }\n                        if (childElement.getAttribute('style') === '') {\n                            childElement.removeAttribute('style');\n                        }\n                        removeChromeArtifacts(childElement);\n                        var originalChild = childElement;\n                        childElement = childElement.nextElementSibling;\n                        if (originalChild.nodeName === 'SPAN' && originalChild.attributes.length === 0) {\n                            element.unwrap(parentElement, originalChild);\n                        }\n                    }\n                }\n            }.bind(this));\n        };\n        scribe.commandPatches.insertHTML = insertHTMLCommandPatch;\n    };\n};",
    "'use strict';\nmodule.exports = function () {\n    return function (scribe) {\n        var element = scribe.element;\n        var nodeHelpers = scribe.node;\n        var InsertListCommandPatch = function (commandName) {\n            scribe.api.CommandPatch.call(this, commandName);\n        };\n        InsertListCommandPatch.prototype = Object.create(scribe.api.CommandPatch.prototype);\n        InsertListCommandPatch.prototype.constructor = InsertListCommandPatch;\n        InsertListCommandPatch.prototype.execute = function (value) {\n            scribe.transactionManager.run(function () {\n                scribe.api.CommandPatch.prototype.execute.call(this, value);\n                if (this.queryState()) {\n                    var selection = new scribe.api.Selection();\n                    var listElement = selection.getContaining(function (node) {\n                            return node.nodeName === 'OL' || node.nodeName === 'UL';\n                        });\n                    if (listElement.nextElementSibling && listElement.nextElementSibling.childNodes.length === 0) {\n                        nodeHelpers.removeNode(listElement.nextElementSibling);\n                    }\n                    if (listElement) {\n                        var listParentNode = listElement.parentNode;\n                        if (listParentNode && /^(H[1-6]|P)$/.test(listParentNode.nodeName)) {\n                            selection.placeMarkers();\n                            nodeHelpers.insertAfter(listElement, listParentNode);\n                            selection.selectMarkers();\n                            if (listParentNode.childNodes.length === 2 && nodeHelpers.isEmptyTextNode(listParentNode.firstChild)) {\n                                nodeHelpers.removeNode(listParentNode);\n                            }\n                            if (listParentNode.childNodes.length === 0) {\n                                nodeHelpers.removeNode(listParentNode);\n                            }\n                        }\n                    }\n                    var listItemElements = Array.prototype.slice.call(listElement.childNodes);\n                    listItemElements.forEach(function (listItemElement) {\n                        var listItemElementChildNodes = Array.prototype.slice.call(listItemElement.childNodes);\n                        listItemElementChildNodes.forEach(function (listElementChildNode) {\n                            if (listElementChildNode.nodeName === 'SPAN') {\n                                var spanElement = listElementChildNode;\n                                element.unwrap(listItemElement, spanElement);\n                            } else if (listElementChildNode.nodeType === Node.ELEMENT_NODE) {\n                                listElementChildNode.style.lineHeight = null;\n                                if (listElementChildNode.getAttribute('style') === '') {\n                                    listElementChildNode.removeAttribute('style');\n                                }\n                            }\n                        });\n                    });\n                }\n            }.bind(this));\n        };\n        scribe.commandPatches.insertOrderedList = new InsertListCommandPatch('insertOrderedList');\n        scribe.commandPatches.insertUnorderedList = new InsertListCommandPatch('insertUnorderedList');\n    };\n};",
    "'use strict';\nmodule.exports = function () {\n    return function (scribe) {\n        var outdentCommand = new scribe.api.CommandPatch('outdent');\n        outdentCommand.execute = function () {\n            scribe.transactionManager.run(function () {\n                var selection = new scribe.api.Selection();\n                var range = selection.range;\n                var blockquoteNode = selection.getContaining(function (node) {\n                        return node.nodeName === 'BLOCKQUOTE';\n                    });\n                if (range.commonAncestorContainer.nodeName === 'BLOCKQUOTE') {\n                    selection.placeMarkers();\n                    selection.selectMarkers(true);\n                    var selectedNodes = range.cloneContents();\n                    blockquoteNode.parentNode.insertBefore(selectedNodes, blockquoteNode);\n                    range.deleteContents();\n                    selection.selectMarkers();\n                    if (blockquoteNode.textContent === '') {\n                        blockquoteNode.parentNode.removeChild(blockquoteNode);\n                    }\n                } else {\n                    var pNode = selection.getContaining(function (node) {\n                            return node.nodeName === 'P';\n                        });\n                    if (pNode) {\n                        var nextSiblingNodes = new scribe.api.Node(pNode).nextAll();\n                        if (nextSiblingNodes.length) {\n                            var newContainerNode = document.createElement(blockquoteNode.nodeName);\n                            nextSiblingNodes.forEach(function (siblingNode) {\n                                newContainerNode.appendChild(siblingNode);\n                            });\n                            blockquoteNode.parentNode.insertBefore(newContainerNode, blockquoteNode.nextElementSibling);\n                        }\n                        selection.placeMarkers();\n                        blockquoteNode.parentNode.insertBefore(pNode, blockquoteNode.nextElementSibling);\n                        selection.selectMarkers();\n                        if (blockquoteNode.innerHTML === '') {\n                            blockquoteNode.parentNode.removeChild(blockquoteNode);\n                        }\n                    } else {\n                        scribe.api.CommandPatch.prototype.execute.call(this);\n                    }\n                }\n            }.bind(this));\n        };\n        scribe.commandPatches.outdent = outdentCommand;\n    };\n};",
    "'use strict';\nmodule.exports = function () {\n    return function (scribe) {\n        var element = scribe.element;\n        if (scribe.allowsBlockElements()) {\n            scribe.el.addEventListener('keyup', function (event) {\n                if (event.keyCode === 8 || event.keyCode === 46) {\n                    var selection = new scribe.api.Selection();\n                    var containerPElement = selection.getContaining(function (node) {\n                            return node.nodeName === 'P';\n                        });\n                    if (containerPElement) {\n                        scribe.transactionManager.run(function () {\n                            selection.placeMarkers();\n                            var pElementChildNodes = Array.prototype.slice.call(containerPElement.childNodes);\n                            pElementChildNodes.forEach(function (pElementChildNode) {\n                                if (pElementChildNode.nodeName === 'SPAN') {\n                                    var spanElement = pElementChildNode;\n                                    element.unwrap(containerPElement, spanElement);\n                                } else if (pElementChildNode.nodeType === Node.ELEMENT_NODE) {\n                                    pElementChildNode.style.lineHeight = null;\n                                    if (pElementChildNode.getAttribute('style') === '') {\n                                        pElementChildNode.removeAttribute('style');\n                                    }\n                                }\n                            });\n                            selection.selectMarkers();\n                        }, true);\n                    }\n                }\n            });\n        }\n    };\n};",
    "var setRootPElement = require('./set-root-p-element'), enforcePElements = require('./formatters/html/enforce-p-elements'), ensureSelectableContainers = require('./formatters/html/ensure-selectable-containers'), inlineElementsMode = require('./inline-elements-mode');\n'use strict';\nmodule.exports = {\n    setRootPElement: setRootPElement,\n    enforcePElements: enforcePElements,\n    ensureSelectableContainers: ensureSelectableContainers,\n    inlineElementsMode: inlineElementsMode\n};",
    "'use strict';\nmodule.exports = function () {\n    return function (scribe) {\n        if (scribe.getHTML().trim() === '') {\n            scribe.setContent('<p><br></p>');\n        }\n    };\n};",
    "var plugins = require('./plugins/core/plugins'), commands = require('./plugins/core/commands'), formatters = require('./plugins/core/formatters'), events = require('./plugins/core/events'), patches = require('./plugins/core/patches'), Api = require('./api'), buildTransactionManager = require('./transaction-manager'), UndoManager = require('./undo-manager'), EventEmitter = require('./event-emitter'), elementHelpers = require('./element'), nodeHelpers = require('./node'), Immutable = require('immutable/dist/immutable'), config = require('./config');\n'use strict';\nfunction Scribe(el, options) {\n    EventEmitter.call(this);\n    this.el = el;\n    this.commands = {};\n    this.options = config.checkOptions(options);\n    this.commandPatches = {};\n    this._plainTextFormatterFactory = new FormatterFactory();\n    this._htmlFormatterFactory = new HTMLFormatterFactory();\n    this.api = new Api(this);\n    this.node = nodeHelpers;\n    this.element = elementHelpers;\n    this.Immutable = Immutable;\n    var TransactionManager = buildTransactionManager(this);\n    this.transactionManager = new TransactionManager();\n    this.undoManager = false;\n    if (this.options.undo.enabled) {\n        if (this.options.undo.manager) {\n            this.undoManager = this.options.undo.manager;\n        } else {\n            this.undoManager = new UndoManager(this.options.undo.limit, this.el);\n        }\n        this._merge = false;\n        this._forceMerge = false;\n        this._mergeTimer = 0;\n        this._lastItem = { content: '' };\n    }\n    this.setHTML(this.getHTML());\n    this.el.setAttribute('contenteditable', true);\n    this.el.addEventListener('input', function () {\n        this.transactionManager.run();\n    }.bind(this), false);\n    var corePlugins = Immutable.OrderedSet(this.options.defaultPlugins).sort(config.sortByPlugin('setRootPElement')).filter(config.filterByBlockLevelMode(this.allowsBlockElements())).map(function (plugin) {\n            return plugins[plugin];\n        });\n    var defaultFormatters = Immutable.List(this.options.defaultFormatters).filter(function (formatter) {\n            return !!formatters[formatter];\n        }).map(function (formatter) {\n            return formatters[formatter];\n        });\n    var defaultPatches = Immutable.List.of(patches.events);\n    var defaultCommandPatches = Immutable.List(this.options.defaultCommandPatches).map(function (patch) {\n            return patches.commands[patch];\n        });\n    var defaultCommands = Immutable.List.of('indent', 'insertList', 'outdent', 'redo', 'subscript', 'superscript', 'undo').map(function (command) {\n            return commands[command];\n        });\n    var allPlugins = Immutable.List().concat(corePlugins, defaultFormatters, defaultPatches, defaultCommandPatches, defaultCommands);\n    allPlugins.forEach(function (plugin) {\n        this.use(plugin());\n    }.bind(this));\n    this.use(events());\n}\nScribe.prototype = Object.create(EventEmitter.prototype);\nScribe.prototype.use = function (configurePlugin) {\n    configurePlugin(this);\n    return this;\n};\nScribe.prototype.setHTML = function (html, skipFormatters) {\n    this._lastItem.content = html;\n    if (skipFormatters) {\n        this._skipFormatters = true;\n    }\n    if (this.el.innerHTML !== html) {\n        this.el.innerHTML = html;\n    }\n};\nScribe.prototype.getHTML = function () {\n    return this.el.innerHTML;\n};\nScribe.prototype.getContent = function () {\n    return this._htmlFormatterFactory.formatForExport(this.getHTML().replace(/<br>$/, ''));\n};\nScribe.prototype.getTextContent = function () {\n    return this.el.textContent;\n};\nScribe.prototype.pushHistory = function () {\n    var scribe = this;\n    if (scribe.options.undo.enabled) {\n        var lastContentNoMarkers = scribe._lastItem.content.replace(/<em class=\"scribe-marker\">[^<]*?<\\/em>/g, '');\n        if (scribe.getHTML() !== lastContentNoMarkers) {\n            var selection = new scribe.api.Selection();\n            selection.placeMarkers();\n            var content = scribe.getHTML();\n            selection.removeMarkers();\n            var previousItem = scribe.undoManager.item(scribe.undoManager.position);\n            if ((scribe._merge || scribe._forceMerge) && previousItem && scribe._lastItem == previousItem[0]) {\n                scribe._lastItem.content = content;\n            } else {\n                scribe._lastItem = {\n                    previousItem: scribe._lastItem,\n                    content: content,\n                    scribe: scribe,\n                    execute: function () {\n                    },\n                    undo: function () {\n                        this.scribe.restoreFromHistory(this.previousItem);\n                    },\n                    redo: function () {\n                        this.scribe.restoreFromHistory(this);\n                    }\n                };\n                scribe.undoManager.transact(scribe._lastItem, false);\n            }\n            clearTimeout(scribe._mergeTimer);\n            scribe._merge = true;\n            scribe._mergeTimer = setTimeout(function () {\n                scribe._merge = false;\n            }, scribe.options.undo.interval);\n            return true;\n        }\n    }\n    return false;\n};\nScribe.prototype.getCommand = function (commandName) {\n    return this.commands[commandName] || this.commandPatches[commandName] || new this.api.Command(commandName);\n};\nScribe.prototype.restoreFromHistory = function (historyItem) {\n    this._lastItem = historyItem;\n    this.setHTML(historyItem.content, true);\n    var selection = new this.api.Selection();\n    selection.selectMarkers();\n    this.trigger('content-changed');\n};\nScribe.prototype.allowsBlockElements = function () {\n    return this.options.allowBlockElements;\n};\nScribe.prototype.setContent = function (content) {\n    if (!this.allowsBlockElements()) {\n        content = content + '<br>';\n    }\n    this.setHTML(content);\n    this.trigger('content-changed');\n};\nScribe.prototype.insertPlainText = function (plainText) {\n    this.insertHTML('<p>' + this._plainTextFormatterFactory.format(plainText) + '</p>');\n};\nScribe.prototype.insertHTML = function (html) {\n    this.getCommand('insertHTML').execute(this._htmlFormatterFactory.format(html));\n};\nScribe.prototype.isDebugModeEnabled = function () {\n    return this.options.debug;\n};\nScribe.prototype.registerHTMLFormatter = function (phase, formatter) {\n    this._htmlFormatterFactory.formatters[phase] = this._htmlFormatterFactory.formatters[phase].push(formatter);\n};\nScribe.prototype.registerPlainTextFormatter = function (formatter) {\n    this._plainTextFormatterFactory.formatters = this._plainTextFormatterFactory.formatters.push(formatter);\n};\nfunction FormatterFactory() {\n    this.formatters = Immutable.List();\n}\nFormatterFactory.prototype.format = function (html) {\n    var formatted = this.formatters.reduce(function (formattedData, formatter) {\n            return formatter(formattedData);\n        }, html);\n    return formatted;\n};\nfunction HTMLFormatterFactory() {\n    this.formatters = {\n        sanitize: Immutable.List(),\n        normalize: Immutable.List(),\n        'export': Immutable.List()\n    };\n}\nHTMLFormatterFactory.prototype = Object.create(FormatterFactory.prototype);\nHTMLFormatterFactory.prototype.constructor = HTMLFormatterFactory;\nHTMLFormatterFactory.prototype.format = function (html) {\n    var formatters = this.formatters.sanitize.concat(this.formatters.normalize);\n    var formatted = formatters.reduce(function (formattedData, formatter) {\n            return formatter(formattedData);\n        }, html);\n    return formatted;\n};\nHTMLFormatterFactory.prototype.formatForExport = function (html) {\n    return this.formatters['export'].reduce(function (formattedData, formatter) {\n        return formatter(formattedData);\n    }, html);\n};\nmodule.exports = Scribe;",
    "var assign = require('lodash-amd/modern/object/assign');\n'use strict';\nmodule.exports = function (scribe) {\n    function TransactionManager() {\n        this.history = [];\n    }\n    assign(TransactionManager.prototype, {\n        start: function () {\n            this.history.push(1);\n        },\n        end: function () {\n            this.history.pop();\n            if (this.history.length === 0) {\n                scribe.pushHistory();\n                scribe.trigger('content-changed');\n            }\n        },\n        run: function (transaction, forceMerge) {\n            this.start();\n            try {\n                if (transaction) {\n                    transaction();\n                }\n            } finally {\n                scribe._forceMerge = forceMerge === true;\n                this.end();\n                scribe._forceMerge = false;\n            }\n        }\n    });\n    return TransactionManager;\n};",
    "'use strict';\nfunction UndoManager(limit, undoScopeHost) {\n    this._stack = [];\n    this._limit = limit;\n    this._fireEvent = typeof CustomEvent != 'undefined' && undoScopeHost && undoScopeHost.dispatchEvent;\n    this._ush = undoScopeHost;\n    this.position = 0;\n    this.length = 0;\n}\nUndoManager.prototype.transact = function (transaction, merge) {\n    if (arguments.length < 2) {\n        throw new TypeError('Not enough arguments to UndoManager.transact.');\n    }\n    transaction.execute();\n    this._stack.splice(0, this.position);\n    if (merge && this.length) {\n        this._stack[0].push(transaction);\n    } else {\n        this._stack.unshift([transaction]);\n    }\n    this.position = 0;\n    if (this._limit && this._stack.length > this._limit) {\n        this.length = this._stack.length = this._limit;\n    } else {\n        this.length = this._stack.length;\n    }\n    if (this._fireEvent) {\n        this._ush.dispatchEvent(new CustomEvent('DOMTransaction', {\n            detail: { transactions: this._stack[0].slice() },\n            bubbles: true,\n            cancelable: false\n        }));\n    }\n};\nUndoManager.prototype.undo = function () {\n    if (this.position < this.length) {\n        for (var i = this._stack[this.position].length - 1; i >= 0; i--) {\n            this._stack[this.position][i].undo();\n        }\n        this.position++;\n        if (this._fireEvent) {\n            this._ush.dispatchEvent(new CustomEvent('undo', {\n                detail: { transactions: this._stack[this.position - 1].slice() },\n                bubbles: true,\n                cancelable: false\n            }));\n        }\n    }\n};\nUndoManager.prototype.redo = function () {\n    if (this.position > 0) {\n        for (var i = 0, n = this._stack[this.position - 1].length; i < n; i++) {\n            this._stack[this.position - 1][i].redo();\n        }\n        this.position--;\n        if (this._fireEvent) {\n            this._ush.dispatchEvent(new CustomEvent('redo', {\n                detail: { transactions: this._stack[this.position].slice() },\n                bubbles: true,\n                cancelable: false\n            }));\n        }\n    }\n};\nUndoManager.prototype.item = function (index) {\n    if (index >= 0 && index < this.length) {\n        return this._stack[index].slice();\n    }\n    return null;\n};\nUndoManager.prototype.clearUndo = function () {\n    this._stack.length = this.length = this.position;\n};\nUndoManager.prototype.clearRedo = function () {\n    this._stack.splice(0, this.position);\n    this.position = 0;\n    this.length = this._stack.length;\n};\nmodule.exports = UndoManager;",
    "'use strict';\nmodule.exports = function () {\n    return function (scribe) {\n        var blockquoteCommand = new scribe.api.SimpleCommand('blockquote', 'BLOCKQUOTE');\n        blockquoteCommand.execute = function () {\n            var command = scribe.getCommand(this.queryState() ? 'outdent' : 'indent');\n            command.execute();\n        };\n        blockquoteCommand.queryEnabled = function () {\n            var command = scribe.getCommand(this.queryState() ? 'outdent' : 'indent');\n            return command.queryEnabled();\n        };\n        blockquoteCommand.queryState = function () {\n            var selection = new scribe.api.Selection();\n            var blockquoteElement = selection.getContaining(function (element) {\n                    return element.nodeName === 'BLOCKQUOTE';\n                });\n            return scribe.allowsBlockElements() && !!blockquoteElement;\n        };\n        scribe.commands.blockquote = blockquoteCommand;\n        if (scribe.allowsBlockElements()) {\n            scribe.el.addEventListener('keydown', function (event) {\n                if (event.keyCode === 13) {\n                    var command = scribe.getCommand('blockquote');\n                    if (command.queryState()) {\n                        var selection = new scribe.api.Selection();\n                        if (selection.isCaretOnNewLine()) {\n                            event.preventDefault();\n                            command.execute();\n                        }\n                    }\n                }\n            });\n        }\n    };\n};",
    "'use strict';\nmodule.exports = function () {\n    return function (scribe) {\n        var map = {\n                'B': 'strong',\n                'I': 'em'\n            };\n        function moveChildren(fromNode, toNode) {\n            var nextChild;\n            var child = fromNode.firstChild;\n            while (child) {\n                nextChild = child.nextSibling;\n                toNode.appendChild(child);\n                child = nextChild;\n            }\n        }\n        function copyAttributes(fromNode, toNode) {\n            if (fromNode.hasAttributes()) {\n                for (var i = 0, ii = fromNode.attributes.length; i < ii; i++) {\n                    var attr = fromNode.attributes[i].cloneNode(false);\n                    toNode.attributes.setNamedItem(attr);\n                }\n            }\n        }\n        function replaceNode(node, nodeName) {\n            var newNode = document.createElement(nodeName);\n            moveChildren(node, newNode);\n            copyAttributes(node, newNode);\n            node.parentNode.replaceChild(newNode, node);\n        }\n        function traverse(parentNode) {\n            var el = parentNode.firstElementChild;\n            var nextSibling;\n            while (el) {\n                nextSibling = el.nextElementSibling;\n                traverse(el);\n                var nodeName = map[el.nodeName];\n                if (nodeName) {\n                    replaceNode(el, nodeName);\n                }\n                el = nextSibling;\n            }\n        }\n        scribe.registerHTMLFormatter('normalize', function (html) {\n            if (typeof html === 'string') {\n                var node = document.createElement('div');\n                node.innerHTML = html;\n                traverse(node);\n                return node.innerHTML;\n            } else {\n                traverse(html);\n                return html;\n            }\n        });\n    };\n};",
    "'use strict';\nmodule.exports = function (level) {\n    return function (scribe) {\n        var tag = '<h' + level + '>';\n        var nodeName = 'H' + level;\n        var commandName = 'h' + level;\n        var headingCommand = new scribe.api.Command('formatBlock');\n        headingCommand.execute = function () {\n            if (this.queryState()) {\n                scribe.api.Command.prototype.execute.call(this, '<p>');\n            } else {\n                scribe.api.Command.prototype.execute.call(this, tag);\n            }\n        };\n        headingCommand.queryState = function () {\n            var selection = new scribe.api.Selection();\n            return !!selection.getContaining(function (node) {\n                return node.nodeName === nodeName;\n            });\n        };\n        headingCommand.queryEnabled = function () {\n            var selection = new scribe.api.Selection();\n            var listNode = selection.getContaining(function (node) {\n                    return node.nodeName === 'OL' || node.nodeName === 'UL';\n                });\n            return scribe.api.Command.prototype.queryEnabled.apply(this, arguments) && scribe.allowsBlockElements() && !listNode;\n        };\n        scribe.commands[commandName] = headingCommand;\n    };\n};",
    "var createWrapper = require('../internals/createWrapper'), slice = require('../internals/slice');\nfunction bind(func, thisArg) {\n    return arguments.length > 2 ? createWrapper(func, 17, slice(arguments, 2), null, thisArg) : createWrapper(func, 1, null, null, thisArg);\n}\nmodule.exports = bind;",
    "var baseCreateCallback = require('../internals/baseCreateCallback'), baseIsEqual = require('../internals/baseIsEqual'), isObject = require('../objects/isObject'), keys = require('../objects/keys'), property = require('../utilities/property');\nfunction createCallback(func, thisArg, argCount) {\n    var type = typeof func;\n    if (func == null || type == 'function') {\n        return baseCreateCallback(func, thisArg, argCount);\n    }\n    if (type != 'object') {\n        return property(func);\n    }\n    var props = keys(func), key = props[0], a = func[key];\n    if (props.length == 1 && a === a && !isObject(a)) {\n        return function (object) {\n            var b = object[key];\n            return a === b && (a !== 0 || 1 / a == 1 / b);\n        };\n    }\n    return function (object) {\n        var length = props.length, result = false;\n        while (length--) {\n            if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {\n                break;\n            }\n        }\n        return result;\n    };\n}\nmodule.exports = createCallback;",
    "var arrayPool = [];\nmodule.exports = arrayPool;",
    "var baseCreate = require('./baseCreate'), isObject = require('../objects/isObject'), setBindData = require('./setBindData'), slice = require('./slice');\nvar arrayRef = [];\nvar push = arrayRef.push;\nfunction baseBind(bindData) {\n    var func = bindData[0], partialArgs = bindData[2], thisArg = bindData[4];\n    function bound() {\n        if (partialArgs) {\n            var args = slice(partialArgs);\n            push.apply(args, arguments);\n        }\n        if (this instanceof bound) {\n            var thisBinding = baseCreate(func.prototype), result = func.apply(thisBinding, args || arguments);\n            return isObject(result) ? result : thisBinding;\n        }\n        return func.apply(thisArg, args || arguments);\n    }\n    setBindData(bound, bindData);\n    return bound;\n}\nmodule.exports = baseBind;",
    "var isNative = require('./isNative'), isObject = require('../objects/isObject'), noop = require('../utilities/noop');\nvar nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate;\nfunction baseCreate(prototype, properties) {\n    return isObject(prototype) ? nativeCreate(prototype) : {};\n}\nif (!nativeCreate) {\n    baseCreate = function () {\n        function Object() {\n        }\n        return function (prototype) {\n            if (isObject(prototype)) {\n                Object.prototype = prototype;\n                var result = new Object();\n                Object.prototype = null;\n            }\n            return result || window.Object();\n        };\n    }();\n}\nmodule.exports = baseCreate;",
    "var bind = require('../functions/bind'), identity = require('../utilities/identity'), setBindData = require('./setBindData'), support = require('../support');\nvar reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\nvar reThis = /\\bthis\\b/;\nvar fnToString = Function.prototype.toString;\nfunction baseCreateCallback(func, thisArg, argCount) {\n    if (typeof func != 'function') {\n        return identity;\n    }\n    if (typeof thisArg == 'undefined' || !('prototype' in func)) {\n        return func;\n    }\n    var bindData = func.__bindData__;\n    if (typeof bindData == 'undefined') {\n        if (support.funcNames) {\n            bindData = !func.name;\n        }\n        bindData = bindData || !support.funcDecomp;\n        if (!bindData) {\n            var source = fnToString.call(func);\n            if (!support.funcNames) {\n                bindData = !reFuncName.test(source);\n            }\n            if (!bindData) {\n                bindData = reThis.test(source);\n                setBindData(func, bindData);\n            }\n        }\n    }\n    if (bindData === false || bindData !== true && bindData[1] & 1) {\n        return func;\n    }\n    switch (argCount) {\n    case 1:\n        return function (value) {\n            return func.call(thisArg, value);\n        };\n    case 2:\n        return function (a, b) {\n            return func.call(thisArg, a, b);\n        };\n    case 3:\n        return function (value, index, collection) {\n            return func.call(thisArg, value, index, collection);\n        };\n    case 4:\n        return function (accumulator, value, index, collection) {\n            return func.call(thisArg, accumulator, value, index, collection);\n        };\n    }\n    return bind(func, thisArg);\n}\nmodule.exports = baseCreateCallback;",
    "var baseCreate = require('./baseCreate'), isObject = require('../objects/isObject'), setBindData = require('./setBindData'), slice = require('./slice');\nvar arrayRef = [];\nvar push = arrayRef.push;\nfunction baseCreateWrapper(bindData) {\n    var func = bindData[0], bitmask = bindData[1], partialArgs = bindData[2], partialRightArgs = bindData[3], thisArg = bindData[4], arity = bindData[5];\n    var isBind = bitmask & 1, isBindKey = bitmask & 2, isCurry = bitmask & 4, isCurryBound = bitmask & 8, key = func;\n    function bound() {\n        var thisBinding = isBind ? thisArg : this;\n        if (partialArgs) {\n            var args = slice(partialArgs);\n            push.apply(args, arguments);\n        }\n        if (partialRightArgs || isCurry) {\n            args || (args = slice(arguments));\n            if (partialRightArgs) {\n                push.apply(args, partialRightArgs);\n            }\n            if (isCurry && args.length < arity) {\n                bitmask |= 16 & ~32;\n                return baseCreateWrapper([\n                    func,\n                    isCurryBound ? bitmask : bitmask & ~3,\n                    args,\n                    null,\n                    thisArg,\n                    arity\n                ]);\n            }\n        }\n        args || (args = arguments);\n        if (isBindKey) {\n            func = thisBinding[key];\n        }\n        if (this instanceof bound) {\n            thisBinding = baseCreate(func.prototype);\n            var result = func.apply(thisBinding, args);\n            return isObject(result) ? result : thisBinding;\n        }\n        return func.apply(thisBinding, args);\n    }\n    setBindData(bound, bindData);\n    return bound;\n}\nmodule.exports = baseCreateWrapper;",
    "var forIn = require('../objects/forIn'), getArray = require('./getArray'), isFunction = require('../objects/isFunction'), objectTypes = require('./objectTypes'), releaseArray = require('./releaseArray');\nvar argsClass = '[object Arguments]', arrayClass = '[object Array]', boolClass = '[object Boolean]', dateClass = '[object Date]', numberClass = '[object Number]', objectClass = '[object Object]', regexpClass = '[object RegExp]', stringClass = '[object String]';\nvar objectProto = Object.prototype;\nvar toString = objectProto.toString;\nvar hasOwnProperty = objectProto.hasOwnProperty;\nfunction baseIsEqual(a, b, callback, isWhere, stackA, stackB) {\n    if (callback) {\n        var result = callback(a, b);\n        if (typeof result != 'undefined') {\n            return !!result;\n        }\n    }\n    if (a === b) {\n        return a !== 0 || 1 / a == 1 / b;\n    }\n    var type = typeof a, otherType = typeof b;\n    if (a === a && !(a && objectTypes[type]) && !(b && objectTypes[otherType])) {\n        return false;\n    }\n    if (a == null || b == null) {\n        return a === b;\n    }\n    var className = toString.call(a), otherClass = toString.call(b);\n    if (className == argsClass) {\n        className = objectClass;\n    }\n    if (otherClass == argsClass) {\n        otherClass = objectClass;\n    }\n    if (className != otherClass) {\n        return false;\n    }\n    switch (className) {\n    case boolClass:\n    case dateClass:\n        return +a == +b;\n    case numberClass:\n        return a != +a ? b != +b : a == 0 ? 1 / a == 1 / b : a == +b;\n    case regexpClass:\n    case stringClass:\n        return a == String(b);\n    }\n    var isArr = className == arrayClass;\n    if (!isArr) {\n        var aWrapped = hasOwnProperty.call(a, '__wrapped__'), bWrapped = hasOwnProperty.call(b, '__wrapped__');\n        if (aWrapped || bWrapped) {\n            return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);\n        }\n        if (className != objectClass) {\n            return false;\n        }\n        var ctorA = a.constructor, ctorB = b.constructor;\n        if (ctorA != ctorB && !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) && ('constructor' in a && 'constructor' in b)) {\n            return false;\n        }\n    }\n    var initedStack = !stackA;\n    stackA || (stackA = getArray());\n    stackB || (stackB = getArray());\n    var length = stackA.length;\n    while (length--) {\n        if (stackA[length] == a) {\n            return stackB[length] == b;\n        }\n    }\n    var size = 0;\n    result = true;\n    stackA.push(a);\n    stackB.push(b);\n    if (isArr) {\n        length = a.length;\n        size = b.length;\n        result = size == length;\n        if (result || isWhere) {\n            while (size--) {\n                var index = length, value = b[size];\n                if (isWhere) {\n                    while (index--) {\n                        if (result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB)) {\n                            break;\n                        }\n                    }\n                } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {\n                    break;\n                }\n            }\n        }\n    } else {\n        forIn(b, function (value, key, b) {\n            if (hasOwnProperty.call(b, key)) {\n                size++;\n                return result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB);\n            }\n        });\n        if (result && !isWhere) {\n            forIn(a, function (value, key, a) {\n                if (hasOwnProperty.call(a, key)) {\n                    return result = --size > -1;\n                }\n            });\n        }\n    }\n    stackA.pop();\n    stackB.pop();\n    if (initedStack) {\n        releaseArray(stackA);\n        releaseArray(stackB);\n    }\n    return result;\n}\nmodule.exports = baseIsEqual;",
    "var baseBind = require('./baseBind'), baseCreateWrapper = require('./baseCreateWrapper'), isFunction = require('../objects/isFunction'), slice = require('./slice');\nvar arrayRef = [];\nvar push = arrayRef.push, unshift = arrayRef.unshift;\nfunction createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {\n    var isBind = bitmask & 1, isBindKey = bitmask & 2, isCurry = bitmask & 4, isCurryBound = bitmask & 8, isPartial = bitmask & 16, isPartialRight = bitmask & 32;\n    if (!isBindKey && !isFunction(func)) {\n        throw new TypeError();\n    }\n    if (isPartial && !partialArgs.length) {\n        bitmask &= ~16;\n        isPartial = partialArgs = false;\n    }\n    if (isPartialRight && !partialRightArgs.length) {\n        bitmask &= ~32;\n        isPartialRight = partialRightArgs = false;\n    }\n    var bindData = func && func.__bindData__;\n    if (bindData && bindData !== true) {\n        bindData = slice(bindData);\n        if (bindData[2]) {\n            bindData[2] = slice(bindData[2]);\n        }\n        if (bindData[3]) {\n            bindData[3] = slice(bindData[3]);\n        }\n        if (isBind && !(bindData[1] & 1)) {\n            bindData[4] = thisArg;\n        }\n        if (!isBind && bindData[1] & 1) {\n            bitmask |= 8;\n        }\n        if (isCurry && !(bindData[1] & 4)) {\n            bindData[5] = arity;\n        }\n        if (isPartial) {\n            push.apply(bindData[2] || (bindData[2] = []), partialArgs);\n        }\n        if (isPartialRight) {\n            unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);\n        }\n        bindData[1] |= bitmask;\n        return createWrapper.apply(null, bindData);\n    }\n    var creater = bitmask == 1 || bitmask === 17 ? baseBind : baseCreateWrapper;\n    return creater([\n        func,\n        bitmask,\n        partialArgs,\n        partialRightArgs,\n        thisArg,\n        arity\n    ]);\n}\nmodule.exports = createWrapper;",
    "var arrayPool = require('./arrayPool');\nfunction getArray() {\n    return arrayPool.pop() || [];\n}\nmodule.exports = getArray;",
    "var objectProto = Object.prototype;\nvar toString = objectProto.toString;\nvar reNative = RegExp('^' + String(toString).replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&').replace(/toString| for [^\\]]+/g, '.*?') + '$');\nfunction isNative(value) {\n    return typeof value == 'function' && reNative.test(value);\n}\nmodule.exports = isNative;",
    "var maxPoolSize = 40;\nmodule.exports = maxPoolSize;",
    "var objectTypes = {\n        'boolean': false,\n        'function': true,\n        'object': true,\n        'number': false,\n        'string': false,\n        'undefined': false\n    };\nmodule.exports = objectTypes;",
    "var arrayPool = require('./arrayPool'), maxPoolSize = require('./maxPoolSize');\nfunction releaseArray(array) {\n    array.length = 0;\n    if (arrayPool.length < maxPoolSize) {\n        arrayPool.push(array);\n    }\n}\nmodule.exports = releaseArray;",
    "var isNative = require('./isNative'), noop = require('../utilities/noop');\nvar descriptor = {\n        'configurable': false,\n        'enumerable': false,\n        'value': null,\n        'writable': false\n    };\nvar defineProperty = function () {\n        try {\n            var o = {}, func = isNative(func = Object.defineProperty) && func, result = func(o, o, o) && func;\n        } catch (e) {\n        }\n        return result;\n    }();\nvar setBindData = !defineProperty ? noop : function (func, value) {\n        descriptor.value = value;\n        defineProperty(func, '__bindData__', descriptor);\n    };\nmodule.exports = setBindData;",
    "var objectTypes = require('./objectTypes');\nvar objectProto = Object.prototype;\nvar hasOwnProperty = objectProto.hasOwnProperty;\nvar shimKeys = function (object) {\n    var index, iterable = object, result = [];\n    if (!iterable)\n        return result;\n    if (!objectTypes[typeof object])\n        return result;\n    for (index in iterable) {\n        if (hasOwnProperty.call(iterable, index)) {\n            result.push(index);\n        }\n    }\n    return result;\n};\nmodule.exports = shimKeys;",
    "function slice(array, start, end) {\n    start || (start = 0);\n    if (typeof end == 'undefined') {\n        end = array ? array.length : 0;\n    }\n    var index = -1, length = end - start || 0, result = Array(length < 0 ? 0 : length);\n    while (++index < length) {\n        result[index] = array[start + index];\n    }\n    return result;\n}\nmodule.exports = slice;",
    "var createCallback = require('../functions/createCallback'), forOwn = require('./forOwn');\nfunction findKey(object, callback, thisArg) {\n    var result;\n    callback = createCallback(callback, thisArg, 3);\n    forOwn(object, function (value, key, object) {\n        if (callback(value, key, object)) {\n            result = key;\n            return false;\n        }\n    });\n    return result;\n}\nmodule.exports = findKey;",
    "var baseCreateCallback = require('../internals/baseCreateCallback'), objectTypes = require('../internals/objectTypes');\nvar forIn = function (collection, callback, thisArg) {\n    var index, iterable = collection, result = iterable;\n    if (!iterable)\n        return result;\n    if (!objectTypes[typeof iterable])\n        return result;\n    callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n    for (index in iterable) {\n        if (callback(iterable[index], index, collection) === false)\n            return result;\n    }\n    return result;\n};\nmodule.exports = forIn;",
    "var baseCreateCallback = require('../internals/baseCreateCallback'), keys = require('./keys'), objectTypes = require('../internals/objectTypes');\nvar forOwn = function (collection, callback, thisArg) {\n    var index, iterable = collection, result = iterable;\n    if (!iterable)\n        return result;\n    if (!objectTypes[typeof iterable])\n        return result;\n    callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n    var ownIndex = -1, ownProps = objectTypes[typeof iterable] && keys(iterable), length = ownProps ? ownProps.length : 0;\n    while (++ownIndex < length) {\n        index = ownProps[ownIndex];\n        if (callback(iterable[index], index, collection) === false)\n            return result;\n    }\n    return result;\n};\nmodule.exports = forOwn;",
    "function isFunction(value) {\n    return typeof value == 'function';\n}\nmodule.exports = isFunction;",
    "var objectTypes = require('../internals/objectTypes');\nfunction isObject(value) {\n    return !!(value && objectTypes[typeof value]);\n}\nmodule.exports = isObject;",
    "var isNative = require('../internals/isNative'), isObject = require('./isObject'), shimKeys = require('../internals/shimKeys');\nvar nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys;\nvar keys = !nativeKeys ? shimKeys : function (object) {\n        if (!isObject(object)) {\n            return [];\n        }\n        return nativeKeys(object);\n    };\nmodule.exports = keys;",
    "var isNative = require('./internals/isNative');\nvar reThis = /\\bthis\\b/;\nvar support = {};\nsupport.funcDecomp = !isNative(window.WinRTError) && reThis.test(function () {\n    return this;\n});\nsupport.funcNames = typeof Function.name == 'string';\nmodule.exports = support;",
    "function noop() {\n}\nmodule.exports = noop;",
    "function property(key) {\n    return function (object) {\n        return object[key];\n    };\n}\nmodule.exports = property;",
    "var findKey = require('lodash-amd/modern/objects/findKey');\n'use strict';\nmodule.exports = function (commandsToKeyboardShortcutsMap) {\n    return function (scribe) {\n        scribe.el.addEventListener('keydown', function (event) {\n            var commandName = findKey(commandsToKeyboardShortcutsMap, function (isKeyboardShortcut) {\n                    return isKeyboardShortcut(event);\n                });\n            if (commandName) {\n                var command = scribe.getCommand(commandName);\n                event.preventDefault();\n                if (command.queryEnabled()) {\n                    command.execute();\n                }\n            }\n        });\n    };\n};",
    "(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define('html-janitor', factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.HTMLJanitor = factory();\n  }\n}(this, function () {\n\n  /**\n   * @param {Object} config.tags Dictionary of allowed tags.\n   * @param {boolean} config.keepNestedBlockElements Default false.\n   */\n  function HTMLJanitor(config) {\n    this.config = config;\n  }\n\n  // TODO: not exhaustive?\n  var blockElementNames = ['P', 'LI', 'TD', 'TH', 'DIV', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'PRE'];\n  function isBlockElement(node) {\n    return blockElementNames.indexOf(node.nodeName) !== -1;\n  }\n\n  var inlineElementNames = ['A', 'B', 'STRONG', 'I', 'EM', 'SUB', 'SUP', 'U', 'STRIKE'];\n  function isInlineElement(node) {\n    return inlineElementNames.indexOf(node.nodeName) !== -1;\n  }\n\n  HTMLJanitor.prototype.clean = function (html) {\n    var sandbox = document.createElement('div');\n    sandbox.innerHTML = html;\n\n    this._sanitize(sandbox);\n\n    return sandbox.innerHTML;\n  };\n\n  HTMLJanitor.prototype._sanitize = function (parentNode) {\n    var treeWalker = createTreeWalker(parentNode);\n    var node = treeWalker.firstChild();\n    if (!node) { return; }\n\n    do {\n      var nodeName = node.nodeName.toLowerCase();\n      var allowedAttrs = this.config.tags[nodeName];\n\n      // Ignore nodes that have already been sanitized\n      if (node._sanitized) {\n        continue;\n      }\n\n      if (node.nodeType === Node.TEXT_NODE) {\n        // If this text node is just whitespace and the previous or next element\n        // sibling is a block element, remove it\n        // N.B.: This heuristic could change. Very specific to a bug with\n        // `contenteditable` in Firefox: http://jsbin.com/EyuKase/1/edit?js,output\n        // FIXME: make this an option?\n        if (node.data.trim() === ''\n            && ((node.previousElementSibling && isBlockElement(node.previousElementSibling))\n                 || (node.nextElementSibling && isBlockElement(node.nextElementSibling)))) {\n          parentNode.removeChild(node);\n          this._sanitize(parentNode);\n          break;\n        } else {\n          continue;\n        }\n      }\n\n      // Remove all comments\n      if (node.nodeType === Node.COMMENT_NODE) {\n        parentNode.removeChild(node);\n        this._sanitize(parentNode);\n        break;\n      }\n\n      var isInline = isInlineElement(node);\n      var containsBlockElement;\n      if (isInline) {\n        containsBlockElement = Array.prototype.some.call(node.childNodes, isBlockElement);\n      }\n\n      var isInvalid = isInline && containsBlockElement;\n\n      // Block elements should not be nested (e.g. <li><p>...); if\n      // they are, we want to unwrap the inner block element.\n      var isNotTopContainer = !! parentNode.parentNode;\n      var isNestedBlockElement =\n            isBlockElement(parentNode) &&\n            isBlockElement(node) &&\n            isNotTopContainer;\n\n      // Drop tag entirely according to the whitelist *and* if the markup\n      // is invalid.\n      if (!this.config.tags[nodeName] || isInvalid || (!this.config.keepNestedBlockElements && isNestedBlockElement)) {\n        // Do not keep the inner text of SCRIPT/STYLE elements.\n        if (! (node.nodeName === 'SCRIPT' || node.nodeName === 'STYLE')) {\n          while (node.childNodes.length > 0) {\n            parentNode.insertBefore(node.childNodes[0], node);\n          }\n        }\n        parentNode.removeChild(node);\n\n        this._sanitize(parentNode);\n        break;\n      }\n\n      // Sanitize attributes\n      for (var a = 0; a < node.attributes.length; a += 1) {\n        var attr = node.attributes[a];\n        var attrName = attr.name.toLowerCase();\n\n        // Allow attribute?\n        var allowedAttrValue = allowedAttrs[attrName] || allowedAttrs === true;\n        var notInAttrList = ! allowedAttrValue;\n        var valueNotAllowed = allowedAttrValue !== true && attr.value !== allowedAttrValue;\n        if (notInAttrList || valueNotAllowed) {\n          node.removeAttribute(attr.name);\n          // Shift the array to continue looping.\n          a = a - 1;\n        }\n      }\n\n      // Sanitize children\n      this._sanitize(node);\n\n      // Mark node as sanitized so it's ignored in future runs\n      node._sanitized = true;\n    } while ((node = treeWalker.nextSibling()));\n  };\n\n  function createTreeWalker(node) {\n    return document.createTreeWalker(node,\n                                     NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT,\n                                     null, false);\n  }\n\n  return HTMLJanitor;\n\n}));\n",
    "var HTMLJanitor = require('html-janitor'), merge = require('lodash-amd/modern/object/merge'), cloneDeep = require('lodash-amd/modern/lang/cloneDeep');\n'use strict';\nmodule.exports = function (config) {\n    var configAllowMarkers = merge(cloneDeep(config), {\n            tags: {\n                em: { class: 'scribe-marker' },\n                br: {}\n            }\n        });\n    return function (scribe) {\n        var janitor = new HTMLJanitor(configAllowMarkers);\n        scribe.registerHTMLFormatter('sanitize', janitor.clean.bind(janitor));\n    };\n};",
    "angular.module(\"scribe\", [])\n\t.factory(\"Scribe\", function() { return require(\"scribe-editor\") })\n\t.factory(\"scribePluginBlockquoteCommand\", function() { return require(\"scribe-plugin-blockquote-command\") })\n\t.factory(\"scribePluginHeadingCommand\", function() { return require(\"scribe-plugin-heading-command\") })\n\t.factory(\"scribePluginFormatterHtmlEnsureSemanticElements\", function() { return require(\"scribe-plugin-formatter-html-ensure-semantic-elements\") })\n\t.factory(\"scribePluginSanitizer\", function() { return require(\"scribe-plugin-sanitizer\") })\n\t.factory(\"scribePluginKeyboardShortcuts\", function() { return require(\"scribe-plugin-keyboard-shortcuts\") });\n"
  ]
}