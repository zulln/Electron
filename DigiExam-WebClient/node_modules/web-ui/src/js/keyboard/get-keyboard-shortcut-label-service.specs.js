describe("getKeyboardShortcutLabel", function() {
	"use strict";

	var getKeyboardShortcutLabel;
	var detectPlatformSpy;
	// TODO(kenneth): Move to a constant
	var CMD_CHAR = "\u2318";

	beforeEach(function() {

		module("dx.webui.keyboard");

		detectPlatformSpy = jasmine.createSpy("detectPlatform");
		module(function($provide) {
			$provide.value("detectPlatform", detectPlatformSpy);
		});

		inject(function($injector) {
			getKeyboardShortcutLabel = $injector.get("getKeyboardShortcutLabel");
		});
	});

	it("lets you set the platform manually", function () {
		var config = {modifiersAND: ["meta"], keysOR: ["a"]};
		var label = getKeyboardShortcutLabel(config, "mac");
		expect(detectPlatformSpy).not.toHaveBeenCalled();
		expect(label).toBe(CMD_CHAR + "A");
	});

	it("gets the platform from the detectPlatform service if it wasn't set manually", function () {
		detectPlatformSpy.and.returnValue("mac");
		var config = {modifiersAND: ["meta"], keysOR: ["a"]};
		var label = getKeyboardShortcutLabel(config);
		expect(detectPlatformSpy).toHaveBeenCalled();
		expect(label).toBe(CMD_CHAR + "A");
	});

	it("handles a single key", function () {
		var config = {keysOR: ["a"]};
		var label = getKeyboardShortcutLabel(config);
		expect(label).toBe(config.keysOR[0].toUpperCase());
	});

	it("only uses the first key if multiple alternatives are available", function () {
		var config = {keysOR: ["a", "b"]};
		var label = getKeyboardShortcutLabel(config);
		expect(label).toBe(config.keysOR[0].toUpperCase());
	});

	describe("when the platform is not 'mac' it", function () {
		it("works with all modifiers and always sorts them in the same order", function () {
			var fn = getKeyboardShortcutLabel;
			var correctLabel = "Meta+Ctrl+Shift+Alt+A";
			var platform = "something unrecognizable";
			expect(fn({modifiersAND: ["meta", "ctrl", "shift", "alt"], keysOR: ["a"]}, platform)).toBe(correctLabel);
			expect(fn({modifiersAND: ["alt", "shift", "ctrl", "meta"], keysOR: ["a"]}, platform)).toBe(correctLabel);
		});
	});

	describe("when the platform is 'mac' it", function () {
		it("uses the 'Command' character for the 'meta' modifier", function () {
			var config = {modifiersAND: ["meta"], keysOR: ["a"]};
			var label = getKeyboardShortcutLabel(config, "mac");
			expect(label).toBe(CMD_CHAR + "A");
		});

		it("does not add a plus between the 'Command' character and the key if 'meta' is the only modifier", function () {
			var config = {modifiersAND: ["meta"], keysOR: ["a"]};
			var label = getKeyboardShortcutLabel(config, "mac");
			expect(label).toBe(CMD_CHAR + "A");
		});

		it("uses 'Option' for the 'alt' modifier", function () {
			var config = {modifiersAND: ["alt"], keysOR: ["a"]};
			var label = getKeyboardShortcutLabel(config, "mac");
			expect(label).toBe("Option+A");
		});

		it("works with all modifiers and always sorts them in the same order", function () {
			var fn = getKeyboardShortcutLabel;
			var correctLabel = CMD_CHAR + "+Ctrl+Shift+Option+A";
			expect(fn({modifiersAND: ["meta", "ctrl", "shift", "alt"], keysOR: ["a"]}, "mac")).toBe(correctLabel);
			expect(fn({modifiersAND: ["alt", "shift", "ctrl", "meta"], keysOR: ["a"]}, "mac")).toBe(correctLabel);
		});
	});
});
