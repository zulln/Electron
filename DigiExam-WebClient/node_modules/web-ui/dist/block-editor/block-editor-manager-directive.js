(function(){
	"use strict";

	angular.module("dx.webui.blockEditor").directive("dxBlockEditorManager", blockEditorManagerDirective);

	function blockEditorManagerDirective(
		CapSettingEnum
	) {

		var directive = {
			restrict: "E",
			scope: {
				question: "=",
				answer: "=",
				onChange: "="
			},
			controllerAs: "vm",
			template: "<div dx-sticky-group class=\"blockEditorManager clearfix\"><div ng-repeat=\"block in answer.answerBlocks\"><dx-rtf-block-editor ng-if=\"block.type == vm.AnswerBlockTypesEnum.HTML\" question=\"question\" answer-block=\"block\" on-change=\"vm.onBlockChange\" on-hard-word-limit=\"vm.onHardWordLimit\" remaining-words=\"remainingWords\"></dx-rtf-block-editor></div></div>",
			replace: true,
			link: link,
			controller: controller
		};

		function reduceBlockWordCount(sum, block) {
			return sum + block.wordCount;
		}

		function updateWordCount($scope) {
			var totalWordCount = $scope.answer.answerBlocks.reduce(reduceBlockWordCount, 0);
			$scope.wordCount = totalWordCount;
			if ($scope.question.capSetting === CapSettingEnum.HARD) {
				$scope.remainingWords = $scope.question.capValue - totalWordCount;
			}
		}

		function link($scope, $element) {
			$scope.wordCountEl = $element.find(".blockEditorManager_wordCount");
			updateWordCount($scope);
		}

		/*@ngInject*/
		function controller(
			$scope,
			AnswerBlockTypesEnum
		) {
			var vm = this;

			vm.AnswerBlockTypesEnum = AnswerBlockTypesEnum;

			vm.onBlockChange = function onBlockChange() {
				updateWordCount($scope);
				$scope.$apply();
				$scope.onChange($scope.answer);
			};
		}
		controller.$inject = ["$scope", "AnswerBlockTypesEnum"];

		return directive;

	}
	blockEditorManagerDirective.$inject = ["CapSettingEnum"];

}());
